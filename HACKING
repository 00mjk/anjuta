Notes for Developers on contributing to Anjuta
----------------------------------------------

(TO BE EXPANDED OVER TIME - please post submissions to the Anjuta 
Development mailing list)


Tools
-----

IMPORTANT: please be careful about using Anjuta to develop Anjuta.
It is probably best not to use Anjuta for its own development,
as it may break lots of things while developing.

Anjuta is written using a mixture of C and C++.


General source structure
------------------------

When editing the code, adding new classes or methods, etc. please 
conform with the style already followed in the source files.

Conventions:
* _cbs suffix - callbacks
* _gui suffix - UI definitions for windows, dialogs etc.

Key elements:
* src/ - the main Anjuta sources
* scintilla/ - the editor
* widgets/ - additional widgets used
* ccview/ - the C++ class viewer
* launcher/ - launcher wrapper used by the debugger


Config management
-----------------

Anjuta does not use gnome-config, and instead has its own config 
manager / properties manager. The source for this is in 
src/properties.cxx. There are several advantages to using this over 
gnome-config, including the ability to do variable substitution.


Documentation
-------------

The documentation is stored in the manuals/ directory, and consists 
of a set of SGML sources conforming to the GNOME Documentation Project's
Style Guide. Please ensure that all additions also follow these guidelines.

Screenshots used in the manual are processed using The Gimp. Single dialogs
and menus are converted to RGB and the Script-Fu Drop Shadow effect applied 
(with the default settings). All documentation images are in PNG format.

Translations of application messages are stored in the standard po/ 
directory structure at the top level of the source tree.
