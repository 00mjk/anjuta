# Anjuta internal configuration file

#----------------- WARNING ------------------------------------#
# Any modification in this file without knowing proper internal
# working of Anjuta may lead to instabilites.
#----------------- WARNING ------------------------------------#

# Anjuta uses this file for internal operations,
# therefore this file should never be modified.
# Only Anjuta developers will be tampering with this file. 

# Any modification if needed should be approved by the Anjuta
# developers, so that the source code is also changed (if needed)
# and the changes incorporated in the next release of Anjuta.

##################################################
# Filters to be used in file open/close/save etc #
##################################################
filter.ruby=Ruby (.rb)|*.rb|

############################################
# File patterns defined for all file types #
############################################
file.patterns.rb=*.rb

####################################################
# Lexer to be used for corresponding file patterns #
####################################################
lexer.$(file.patterns.rb)=python

################################################
# File type corresponding to the file patterns #
################################################
filetype.$(file.patterns.rb)=ruby

#####################
# Keywords for Ruby #
#####################

keywordclass.ruby=__FILE__ and def end in or self unless __LINE__ begin \
defined? ensure module redo super until BEGIN break do false next rescue \
then when END case else for nil retry true while alias class elsif if \
not return undef yield
keywords.$(file.patterns.rb)=$(keywordclass.ruby)

statement.indent.*.rb=
statement.end*.rb=
statement.lookback.*.rb=1
block.start.*.rb=10

file.interpreted.$(file.patterns.rb)=1

######################################################
# Default Commands for handling different file types #
######################################################

command.compile.file.$(file.patterns.rb)=
command.build.file.$(file.patterns.rb)=
command.execute.file.$(file.patterns.rb)=ruby $(current.full.filename.ext)

