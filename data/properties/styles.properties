
###############################################################################
# Global default styles for all languages
###############################################################################

# Whitespace
style.default.whitespace=fore:#808080

# Comments
style.default.comment=fore:#FF0000

# Numbers
style.default.number=fore:#007F00

# Keywords
style.default.keyword=fore:#00007F,bold

# System Keywords
style.default.syskeyword=fore:#991111,bold

# Local keywords
style.default.localkeyword=fore:#0000FF,bold

# Doublequote strings
style.default.doublequote=fore:#E8C100

# Single quote strings
style.default.singlequote=fore:#E8C100

# Preprocessor and directives
style.default.preprocessor=fore:#7F7F00

# Operators
style.default.operator=

# Unterminated strings
style.default.unclosedstring=fore:#000000,back:#E0C0E0,eolfilled

# Identifiers
style.default.identifier=

# definition name
style.default.definition=fore:#0000FF,bold

# function name definition
style.default.function=fore:#007F7F,bold

###############################################################################
# Styles that will be same for all languages
###############################################################################

# Default
style.*.32=Monospace,size:12

# Line number
style.*.33=back:#D0D0D0

# Brace highlight
style.*.34=fore:#0000FF,bold

# Brace incomplete highlight
style.*.35=fore:#FF0000,bold

# Control characters
style.*.36=

# Indentation guides
style.*.37=fore:#C0C0C0,back:#FFFFFF

###############################################################################
# Ada styles
###############################################################################

# Default
style.ada.0=fore:#000000,$(font.ada)

# keyword
style.ada.1=$(style.default.keyword)

# Identifiers
style.ada.2=$(style.default.identifier)

# Number
style.ada.3=$(style.default.number)

# Characters
style.ada.4=fore:#7F007F,$(font.monospace)

# Single quoted string
style.ada.5=$(style.default.singlequote)

# Operators
style.ada.6=$(style.default.operator)

# Double quoted string
style.ada.7=$(style.default.doublequote)

# End of line where string is not closed
style.ada.8=$(style.default.unclosedstring)

# Comment
style.ada.10=$(style.default.comment)

###############################################################################
# Assembler Styles (fixme)
###############################################################################

style.asm.32=fore:#808080,font:Verdana,size:8
# Default
style.asm.0=$(style.default.whitespace)
# Comment
style.asm.1=$(style.default.comment)
#$(colour.code.comment.line),font:Comic Sans MS,size:8
# Number
style.asm.2=$(style.default.number)
# String
style.asm.3=$(style.default.singlequote)
# Operator
style.asm.4=$(style.default.operator)
# Identifier
style.asm.5=$(style.default.identifier)
# CPU instruction
style.asm.6=$(style.default.keyword)
#fore:#0000ff
# FPU instruction
style.asm.7=$(style.default.localkeyword)
# Register
style.asm.8=$(style.default.syskeyword)
# assembler Directive
style.asm.9=$(style.default.preprocessor)
# assembler Directive Operand
style.asm.10=fore:#0000ff

###############################################################################
# ASN.1 styles (fixme)
###############################################################################
# Default
style.asn1.0=fore:#000000
# Comment
style.asn1.1=fore:#007F00,$(font.comment)
# Identifiers
style.asn1.2=fore:#000000,bold
# Double quoted string
style.asn1.3=fore:#7F007F
# Numeric OID definition
style.asn1.4=fore:#007F7F,bold
# Non OID numbers
style.asn1.5=fore:#7F0000
# Keywords
style.asn1.6=fore:#00007F
# Attributes
style.asn1.7=fore:#F07800
# Descriptors
style.asn1.8=fore:#00007F
# Types
style.asn1.9=fore:#00007F
# Operators
style.asn1.10=fore:#222222

###############################################################################
# AU3 styles (fixme)
###############################################################################

# White space
style.au3.0=fore:#000000,$(font.au3)

# Comment line
style.au3.1=fore:#009933,italics

# Comment block
style.au3.2=fore:#669900,italics

# Number
style.au3.3=fore:#AC00A9,bold,italics

# Function
style.au3.4=fore:#000090,bold,italics

# Keyword 
style.au3.5=fore:#0000FF,bold

# Macro
style.au3.6=fore:#FF33FF,bold

# String
style.au3.7=fore:#9999CC,bold

# Operator
style.au3.8=fore:#FF0000,bold

# Variable
style.au3.9=fore:#AA0000,bold

# Sent keys in string
style.au3.10=fore:#FF8800,bold

# Pre-Processor
style.au3.11=fore:#F000FF,italics

# Special
style.au3.12=fore:#A00FF0,italics

###############################################################################
# Baan styles (fixme)
###############################################################################

colour.baan.operator=fore:#B06000

# Default
style.baan.32=$(font.monospace)
# White space
style.baan.0=fore:#808080,$(font.monospace)
# Comment
style.baan.1=$(colour.code.comment.line),$(font.monospace)
# Doc comment
style.baan.2=fore:#007F7F,$(font.comment)
# Number
style.baan.3=$(colour.number),$(font.monospace)
# Keyword
style.baan.4=$(colour.keyword),bold,$(font.monospace)
# Double quoted string
style.baan.5=$(colour.string),$(font.monospace)
# Preprocessor
style.baan.6=$(colour.preproc),$(font.monospace)
# Operators
style.baan.7=$(colour.operator),bold,$(font.monospace)
# Identifiers
style.baan.8=$(font.monospace)
# End of line where string is not closed
style.baan.9=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# Keywords2
style.baan.10=fore:#B00040,$(font.monospace)
# Braces are only matched in operator style
braces.cpp.style=10

###############################################################################
# Bullant styles (fixme) 
###############################################################################

# White space
style.bullant.0=$(style.default.whitespace)
# Comment
style.bullant.1=$(style.default.comment)
# Line Comment
style.bullant.2=$(style.default.comment)
# Doc comment
style.bullant.3=$(style.default.comment)
# Number
style.bullant.4=$(style.default.comment)
# Keyword
style.bullant.5=$(style.default.keyword)
# Double quoted string
style.bullant.6=$(style.default.doublequote)
# Single quoted string
style.bullant.7=$(style.default.singlequote)
# Symbols
style.bullant.8=$(style.default.syskeyword)
# Preprocessor
style.bullant.9=$(style.default.preprocessor)

###############################################################################
# Apache runtime config style definition
###############################################################################

# Whitespaces
style.conf.0=$(style.default.whitespace)
# Comment
style.conf.1=$(style.default.comment)
# Number
style.conf.2=$(style.default.number)
# Apache Runtime Directive (SCE_CONF_DIRECTIVE)
style.conf.3=fore:#000000,back:#A0FFA0
# extensions (like .gz, .tgz, .html) (SCE_CONF_EXTENSION)
style.conf.4=fore:#000000,back:#FFE0FF
# parameters for Apache Runtime directives (SCE_CONF_PARAMETER)
style.conf.5=fore:#000000,back:#FFE0FF
# Double quoted string
style.conf.6=$(style.default.doublequote)
# Operators
style.conf.7=$(style.default.operator)
# IP address (SCE_CONF_IP)style.conf.8=fore:#007F7F,bold
# identifier
style.conf.9=$(style.default.identifier)

###############################################################################
# C and C++ style definition
###############################################################################

# Whitespaces
style.cpp.0=$(style.default.whitespace)
# Comment
style.cpp.1=$(style.default.comment)
# Line Comment
style.cpp.2=$(style.default.comment)
# Doc comment
style.cpp.3=$(style.default.comment)
# Number
style.cpp.4=$(style.default.number)
# Keyword
style.cpp.5=$(style.default.keyword)
# Keyword 2
style.cpp.16=$(style.default.localkeyword)
# Keyword 3
style.cpp.19=$(style.default.syskeyword)
# Double quoted string
style.cpp.6=$(style.default.doublequote)
# Single quoted string
style.cpp.7=$(style.default.singlequote)
# UUIDs (only in IDL)
style.cpp.8=fore:#804080
# Preprocessor
style.cpp.9=$(style.default.preprocessor)
# Operators
style.cpp.10=$(style.default.operator)
# Identifiers
style.cpp.11=$(style.default.identifier)
# End of line where string is not closed
style.cpp.12=$(style.default.unclosedstring)
# Verbatim strings for C#
style.cpp.13=fore:#007F00,back:#E0FFE0,eolfilled
# Braces are only matched in operator style
braces.cpp.style=10

###############################################################################
# CSS styles
###############################################################################

# Whitespaces
style.css.0=fore:#000033,eolfilled
# HTML tag
style.css.1=fore:#800000,bold
# Class
style.css.2=$(style.default.localkeyword)
# Pseudo class
style.css.3=$(style.default.syskeyword)
# Unknown Pseudo class
style.css.4=fore:#FF0000
# Operator
style.css.5=$(style.default.operator)
# Identifier
style.css.6=$(style.default.identifier)
# Unknown Identifier
style.css.7=fore:#FF0000
# Value
style.css.8=fore:#800080
# Comment
style.css.9=$(style.default.comment)
# ID
style.css.10=fore:#800000
# Important
style.css.11=fore:#0000FF
# Directive (@)
style.css.12=fore:#008000,bold
# Double quoted strings
style.css.13=$(style.default.doublequote)
# Single quoted strings
style.css.14=$(style.default.singlequote)

###############################################################################
# Eiffel styles
###############################################################################

# Default
style.eiffel.0=$(style.default.whitespace)
style.eiffelkw.0=$(style.eiffel.0)
# Line comment
style.eiffel.1=$(style.default.comment)
style.eiffelkw.1=$(style.eiffel.1)
# Number
style.eiffel.2=$(style.default.number)
style.eiffelkw.2=$(style.eiffel.2)
# Keyword
style.eiffel.3=$(style.default.keyword)
style.eiffelkw.3=$(style.eiffel.3)
# String
style.eiffel.4=$(style.default.doublequote)
style.eiffelkw.4=$(style.eiffel.4)
# Character
style.eiffel.5=$(style.default.singlequote)
style.eiffelkw.5=$(style.eiffel.5)
# Operators
style.eiffel.6=$(style.default.operator)
style.eiffelkw.6=$(style.eiffel.6)
# Identifier
style.eiffel.7=$(style.default.identifier)
style.eiffelkw.7=$(style.eiffel.7)
# End of line where string is not closed
style.eiffel.8=$(style.default.unclosedstring)
style.eiffelkw.8=$(style.eiffel.8)

###############################################################################
# Erlang styles (fixme)
###############################################################################

# White space
style.erlang.0=fore:#000000
# Comment
style.erlang.1=$(colour.code.comment.line),$(font.code.comment.line)
# Variable
style.erlang.2=fore:#800040
#$(colour.preproc)
# Number
style.erlang.3=$(colour.number)
# Keyword
style.erlang.4=$(colour.keyword),bold
# String
style.erlang.5=$(colour.string)
# Operator
style.erlang.6=$(colour.operator),bold
# Atom
style.erlang.7=fore:#000080
# function name
style.erlang.8=fore:#ff0000
# Character
style.erlang.9=$(colour.char)
# Macro
style.erlang.10=fore:#604000,bold
# Record
style.erlang.11=fore:#604000,bold
# Separator
style.erlang.12=$(colour.error)
# Node name
style.erlang.13=fore:#00a060,bold
# parse error
style.erlang.31=$(colour.error)

###############################################################################
# Escript styles (fixme)
###############################################################################

# Default
style.escript.0=$(font.base)
# Comment
style.escript.1=$(colour.code.comment.box),$(font.code.comment.box)
# Line Comment
style.escript.2=$(colour.code.comment.line),$(font.code.comment.line)
# Doc comment
style.escript.3=$(colour.code.comment.doc),$(font.code.comment.doc)
# Number
style.escript.4=$(colour.number)
# Keyword
style.escript.5=fore:#FF4000
# Double quoted string
style.escript.6=fore:#FF8000,$(font.string.literal)
# Operators
style.escript.7=fore:#FF0000
#~ Identifiers
style.escript.8=
# Braces
style.escript.9=fore:#0000FF
# Keywords2
style.escript.10=fore:#B00040
# Keywords3
style.escript.11=fore:#B00040

###############################################################################
# Forth styles (fixme)
###############################################################################

# whitespace (SCE_FORTH_DEFAULT)
style.forth.0=$(font.monospace)
# Comment (SCE_FORTH_COMMENT)
style.forth.1=fore:#009933,$(font.comment),$(font.monospace)
# ML comment (SCE_FORTH_COMMENT_ML)
style.forth.2=fore:#007F00,$(font.comment)
# ML comment (SCE_FORTH_IDENTIFIER)
style.forth.3=fore:#000000,bold
# control (SCE_FORTH_CONTROL)
style.forth.4=fore:#00007F,bold
# Keywords (SCE_FORTH_KEYWORD)
style.forth.5=fore:#000000,$(font.monospace),bold
# defwords (SCE_FORTH_DEFWORD)
style.forth.6=fore:#FF0000,bold,$(font.monospace)
# preword1 (SCE_FORTH_PREWORD1)
style.forth.7=fore:#CC3300,bold,$(font.monospace)
# preword2 (SCE_FORTH_PREWORD2)
style.forth.8=fore:#996633,bold,$(font.monospace)
# number (SCE_FORTH_NUMBER)
style.forth.9=fore:#007F7F,$(font.monospace)
# Double quoted string (SCE_FORTH_STRING)
style.forth.10=fore:#CC3300,$(font.monospace)
# locale
style.forth.11=fore:#0000CC,$(font.monospace)

###############################################################################
# Fortran styles
###############################################################################

# Default
style.fortran.0=$(style.default.whitespace)
style.f77.0=$(style.default.whitespace)
style.fortran.32=
style.f77.32=
# Comment
# style.fortran.1=$(colour.code.comment.box),$(font.code.comment.box)
# style.f77.1=$(colour.code.comment.box),$(font.code.comment.box)
style.fortran.1=$(style.default.comment)
style.f77.1=$(style.default.comment)
# Number
style.fortran.2=$(style.default.number)
style.f77.2=$(style.default.number)
# Single quoted string
style.fortran.3=$(style.default.singlequote)
style.f77.3=$(style.default.singlequote)
# Double quoted string
style.fortran.4=$(style.default.doublequote)
style.f77.4=$(style.default.doublequote)
# End of line where string is not closed
style.fortran.5=$(style.default.unclosedstring)
style.f77.5=$(style.default.unclosedstring)
# Operators
style.fortran.6=$(style.default.operator)
style.f77.6=$(style.default.operator)
# Identifiers
style.fortran.7=$(style.default.identifier)
style.f77.7=$(style.default.identifie)
# Keywords
style.fortran.8=$(style.default.keyword)
style.f77.8=$(style.default.keyword)
# Keywords2
style.fortran.9=$(style.default.localkeyword)
style.f77.9=$(style.default.localkeyword)
# Keywords3
style.fortran.10=$(style.default.syskeyword)
style.f77.10=$(style.default.syskeyword)
# Preprocessor
style.fortran.11=$(style.default.preprocessor)
style.f77.11=$(style.default.preprocessor)
# Operators in .NAME. format
style.fortran.12=
style.f77.12=
# Labels
style.fortran.13=fore:#E0C0E0,$(font.monospace)
style.f77.13=fore:#B00080,$(font.monospace)
# Continuation
style.fortran.14=fore:#000000,back:#F0E080,$(font.monospace)
style.f77.14=fore:#000000,back:#F0E080,$(font.monospace)

###############################################################################
# HTML and XML share lexing code so use the same style numbers
# Hypertext Markup Language
###############################################################################

# Text
style.hypertext.0=
# Tags
style.hypertext.1=fore:#000080
# Unknown Tags
style.hypertext.2=fore:#FF0000
# Attributes
style.hypertext.3=fore:#008080
# Unknown Attributes
style.hypertext.4=fore:#FF0000
# Numbers
style.hypertext.5=$(style.default.number)
# Double quoted strings
style.hypertext.6=$(style.default.doublequote)
# Single quoted strings
style.hypertext.7=$(style.default.singlequote)
# Other inside tag
style.hypertext.8=fore:#800080
# Comment
style.hypertext.9=$(style.default.comment)
# Entities
style.hypertext.10=fore:#800080
# XML style tag ends '/>'
style.hypertext.11=fore:#000080
# XML identifier start '<?'
style.hypertext.12=fore:#0000FF
# XML identifier end '?>'
style.hypertext.13=fore:#0000FF
#  SCRIPT
style.hypertext.14=fore:#000080
# ASP <% ... %>
style.hypertext.15=back:#FFFF00
# ASP <% ... %>
style.hypertext.16=back:#FFDF00
# CDATA
style.hypertext.17=back:#FFDF00
# PHP
style.hypertext.18=fore:#0000FF,back:#FFEFBF
# Unquoted values
style.hypertext.19=fore:#FF00FF,back:#FFEFFF
# SGML tags <! ... >
style.hypertext.21=fore:#000080,back:#EFEFFF
# SGML command
style.hypertext.22=fore:#000080,back:#EFEFFF,bold
# SGML 1st param
style.hypertext.23=fore:#006600,back:#EFEFFF
# SGML double string
style.hypertext.24=fore:#800000,back:#EFEFFF
# SGML single string
style.hypertext.25=fore:#993300,back:#EFEFFF
# SGML error
style.hypertext.26=fore:#800000,back:#FF6666
# SGML special (#xxxx type)
style.hypertext.27=fore:#3366FF,back:#EFEFFF
# SGML entity
style.hypertext.28=fore:#333333,back:#EFEFFF
# SGML comment
style.hypertext.29=fore:#808000,back:#EFEFFF
# SGML block
style.hypertext.31=fore:#000066,back:#CCCCE0
# Some reasonable background colours
# Off White #FFFBF0    Light green #C0DCC0    Light Blue #A6CAF0
# Matched Operators
style.hypertext.34=fore:#0000FF,notbold
style.hypertext.35=fore:#FF0000,notbold

# Embedded Javascript
# JS Start - allows eol filled background to not start on same line as SCRIPT tag
style.hypertext.40=fore:#7F7F00
# JS Default
style.hypertext.41=back:#FFFBF0,eolfilled
# JS Comment
style.hypertext.42=$(style.default.comment),back:#FFFBF0,eolfilled
# JS Line Comment
style.hypertext.43=$(style.default.comment),back:#FFFBF0
# JS Doc comment
style.hypertext.44=$(style.default.comment),back:#FFFBF0,eolfilled
# JS Number
style.hypertext.45=$(style.default.number),back:#FFFBF0
# JS Word
style.hypertext.46=back:#FFFBF0
# JS Keyword
style.hypertext.47=$(style.default.keyword),back:#FFFBF0
# JS Double quoted string
style.hypertext.48=$(style.default.doublequote),back:#FFFBF0
# JS Single quoted string
style.hypertext.49=$(style.default.singlequote),back:#FFFBF0
# JS Symbols 
style.hypertext.50=back:#FFFBF0
# JavaScript EOL
style.hypertext.51=back:#BFBBB0,eolfilled
# JavaScript RegEx
style.hypertext.52=back:#FFBBB0

# ASP Javascript
# JS Start - allows eol filled background to not start on same line as SCRIPT tag
style.hypertext.55=fore:#7F7F00
# JS Default
style.hypertext.56=back:#DFDF7F,eolfilled
# JS Comment
style.hypertext.57=$(style.default.comment),back:#DFDF7F,eolfilled
# JS Line Comment
style.hypertext.58=$(style.default.comment),back:#DFDF7F
# JS Doc comment
style.hypertext.59=$(style.default.comment),back:#DFDF7F,eolfilled
# JS Number
style.hypertext.60=$(style.default.number),back:#DFDF7F
# JS Word
style.hypertext.61=back:#DFDF7F
# JS Keyword
style.hypertext.62=$(style.default.keyword),back:#DFDF7F
# JS Double quoted string
style.hypertext.63=$(style.default.doublequote),back:#DFDF7F
# JS Single quoted string
style.hypertext.64=$(style.default.singlequote),back:#DFDF7F
# JS Symbols 
style.hypertext.65=back:#DFDF7F
# JavaScript EOL
style.hypertext.66=back:#BFBBB0,eolfilled
# JavaScript RegEx
style.hypertext.67=back:#FFBBB0

# Embedded VBS
# Start
style.hypertext.70=
# Default
style.hypertext.71=back:#EFEFFF,eolfilled
# Comment
style.hypertext.72=$(style.default.comment),back:#EFEFFF,eolfilled
# Number
style.hypertext.73=$(style.default.number),back:#EFEFFF,eolfilled
# KeyWord
style.hypertext.74=back:#EFEFFF,bold,eolfilled
# String
style.hypertext.75=$(style.default.doublequote),back:#EFEFFF,eolfilled
# Identifier
style.hypertext.76=back:#EFEFFF,fore:#000080,eolfilled
# Unterminated string
style.hypertext.77=back:#7F7FFF,fore:#000080,eolfilled

# ASP VBS
# Start
style.hypertext.80=
# Default
style.hypertext.81=back:#CFCFEF,eolfilled
# Comment
style.hypertext.82=$(style.default.comment),back:#CFCFEF,eolfilled
# Number
style.hypertext.83=$(style.default.number),back:#CFCFEF,eolfilled
# KeyWord
style.hypertext.84=back:#CFCFEF,fore:#000080,bold,eolfilled
# String
style.hypertext.85=$(style.default.doublequote),back:#CFCFEF,eolfilled
# Identifier
style.hypertext.86=back:#CFCFEF,fore:#000080,eolfilled
# Unterminated string
style.hypertext.87=back:#7F7FBF,fore:#000080,eolfilled

# Embedded Python
style.hypertext.90=fore:#808080
style.hypertext.91=fore:#808080,back:#EFFFEF,eolfilled
# Comment
style.hypertext.92=$(style.default.comment),back:#EFFFEF,eolfilled
# Number
style.hypertext.93=$(style.default.number),back:#EFFFEF,eolfilled
# String
style.hypertext.94=$(style.default.doublequote),back:#EFFFEF,eolfilled
# Single quoted string
style.hypertext.95=$(style.default.singlequote),back:#EFFFEF,eolfilled
# Keyword
style.hypertext.96=$(style.default.keyword),back:#EFFFEF,eolfilled
# Triple quotes
style.hypertext.97=$(style.default.doublequote),back:#EFFFEF,eolfilled
# Triple double quotes
style.hypertext.98=$(style.default.doublequote),back:#EFFFEF,eolfilled
# Class name definition
style.hypertext.99=$(style.default.definition),back:#EFFFEF,eolfilled
# Function or method name definition
style.hypertext.100=$(style.default.function),back:#EFFFEF,eolfilled
# Operators
style.hypertext.101=$(style.default.operator),back:#EFFFEF,eolfilled
# Identifiers
style.hypertext.102=$(style.default.identifier),back:#EFFFEF,eolfilled

# ASP Python
style.hypertext.105=fore:#808080
style.hypertext.106=fore:#808080,back:#CFEFCF,eolfilled
# Comment
style.hypertext.107=$(style.default.comment),back:#CFEFCF,eolfilled
# Number
style.hypertext.108=$(style.default.number),back:#CFEFCF,eolfilled
# String
style.hypertext.109=$(style.default.doublequote),back:#CFEFCF,eolfilled
# Single quoted string
style.hypertext.110=$(style.default.singlequote),back:#CFEFCF,eolfilled
# Keyword
style.hypertext.111=$(style.default.keyword),back:#CFEFCF,eolfilled
# Triple quotes
style.hypertext.112=$(style.default.doublequote),back:#CFEFCF,eolfilled
# Triple double quotes
style.hypertext.113=$(style.default.doublequote),back:#CFEFCF,eolfilled
# Class name definition
style.hypertext.114=$(style.default.definition),back:#CFEFCF,eolfilled
# Function or method name definition
style.hypertext.115=$(style.default.function),back:#CFEFCF,eolfilled
# Operators
style.hypertext.116=$(style.default.operator),back:#CFEFCF,eolfilled
# Identifiers
style.hypertext.117=$(style.default.identifier),back:#CFEFCF,eolfilled

###############################################################################
# Kix Styles (fixme)
###############################################################################

# White space
style.kix.0=fore:#000000,$(font.vbs)
# Comment
style.kix.1=$(colour.code.comment.line),$(font.code.comment.line)
# String
style.kix.2=$(colour.string)
style.kix.3=$(colour.string)
# Number
style.kix.4=$(colour.number)
# Variables
style.kix.5=fore:#B00040
# Macro
style.kix.6=$(colour.preproc)
# Keyword
style.kix.7=$(colour.keyword),bold
# Function
style.kix.8=$(colour.keyword)
# Operator
style.kix.9=$(colour.operator),bold

###############################################################################
# LaTeX styles
###############################################################################

# White space
style.latex.0=$(style.default.whitespace)
# Command
style.latex.1=$(style.default.keyword)
# Tag
style.latex.2=fore:#880088,bold
# Math
style.latex.3=$(style.default.number)
# Comment
style.latex.4=$(style.default.comment)

###############################################################################
# LISP style definition
###############################################################################

# Default
style.lisp.32=$(font.base)
# White space
style.lisp.0=fore:#808080
# Line Comment
style.lisp.1=$(colour.code.comment.box),$(font.code.comment.box)
# Number
style.lisp.2=$(colour.number)
# Keyword
style.lisp.3=$(colour.keyword),bold
# String
style.lisp.6=$(colour.string)
# Operators
style.lisp.10=$(colour.operator),bold
# Identifiers
style.lisp.9=
# End of line where string is not closed
style.lisp.8=fore:#000000,font:Verdana,size:9,back:#fefecc,eolfilled
# Matched Operators
style.lisp.34=fore:#0000FF,bold
style.lisp.35=fore:#FF0000,bold

###############################################################################
# LOT FileStyles (fixme)
###############################################################################

# Default
style.lot.0=fore:#000000
# header
style.lot.1=back:#00F0FF,eolfilled
# break
style.lot.2=back:#FFFF00,eolfilled
# set
 style.lot.3=fore:#FFFFFF,back:#0000FF,bold,eolfilled
# pass
 style.lot.4=back:#00FF00,eolfilled
# fail
style.lot.5=back:#FF0000,eolfilled,bold
# abort
style.lot.6=back:#0000FF,bold,eolfilled

###############################################################################
# Lout styles (fixme)
###############################################################################

# Default
style.lout.32=$(font.base)
# White space
style.lout.0=fore:#808080
# Comment
style.lout.1=$(colour.code.comment.line),$(font.code.comment.line)
# Number
style.lout.2=$(colour.number)
# Keyword
style.lout.3=$(colour.keyword),bold
# Keyword2
style.lout.4=$(colour.keyword),bold
# Keyword3
style.lout.5=$(colour.keyword),bold
# Keyword4
style.lout.6=$(colour.keyword)
# Double quoted string
style.lout.7=$(colour.string)
# Operators
style.lout.8=$(colour.operator),bold
# Identifiers
style.lout.9=
# End of line where string is not closed
style.lout.10=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled

###############################################################################
# Lua styles
###############################################################################

style.lua.0=fore:#808080
style.lua.1=fore:#007F00,$(font.monospace),italics
style.lua.2=fore:#007F00,$(font.monospace)
style.lua.3=fore:#7F7F7F
style.lua.4=fore:#007F7F
style.lua.5=fore:#00007F,bold
style.lua.6=fore:#7F007F,$(font.monospace)
style.lua.7=fore:#7F007F,$(font.monospace)
style.lua.8=fore:#007F7F
style.lua.9=fore:#7F7F00
style.lua.10=bold
style.lua.11=
style.lua.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# Other keywords (bozo test colors :-)
style.lua.13=$(style.lua.5),back:#D0FFD0
style.lua.14=$(style.lua.5),back:#D0D0FF
style.lua.15=$(style.lua.5),back:#FFD0D0
style.lua.16=$(style.lua.5),back:#FFD0FF
style.lua.17=$(style.lua.5),back:#FFFFD0

###############################################################################
# Matlab styles
###############################################################################
# White space
style.matlab.0=fore:#000000
# Comment
style.matlab.1=$(colour.code.comment.line),$(font.code.comment.line)
# Command
style.matlab.2=$(colour.preproc)
# Number
style.matlab.3=$(colour.number)
# Keyword
style.matlab.4=$(colour.keyword),bold
# String
style.matlab.5=$(colour.string)
# Operator
style.matlab.6=$(colour.operator),bold
# Identifier
style.matlab.7=

###############################################################################
# Makefile styles #
###############################################################################

# Default
style.makefile.0=
# Comment
style.makefile.1=$(style.default.comment)
# Matched Operators
style.makefile.34=fore:#0000FF,notbold
style.makefile.35=fore:#FF0000,notbold

###############################################################################
# Metapost: highlighting (fixme)
###############################################################################

# Default
style.metapost.0=fore:#7F7F00
style.metapost.0=fore:#3F3F3F
# Special
style.metapost.1=fore:#007F7F
# Group
style.metapost.2=fore:#7F0000
# Symbol
style.metapost.3=fore:#7F7F00
# Command
style.metapost.4=fore:#007F00
# Text
style.metapost.5=fore:#000000
# Extra
style.metapost.6=fore:#007F00,italics

style.metapost.34=fore:#00007F
style.metapost.35=fore:#7F007F

###############################################################################
# mmixal styles (fixme)
###############################################################################

# Divsion of leading whitespace in line
style.mmixal.0=
# Comment
style.mmixal.1=$(colour.code.comment.line),$(font.code.comment.line)
# Label
style.mmixal.2=$(font.base)
# Opcode (not validated)
style.mmixal.3=
# Division between Label and Opcode
style.mmixal.4=
# Valid Opcode (as defined in opcodes above)
style.mmixal.5=$(colour.keyword),bold
# Unknown Opcode
style.mmixal.6=$(colour.error)
# Division between Opcode and Operands
style.mmixal.7=
# Division of Operands
style.mmixal.8=
# Number
style.mmixal.9=$(colour.number)
# Reference (to a Label)
style.mmixal.10=$(font.base)
# Char
style.mmixal.11=$(colour.char)
# String
style.mmixal.12=$(colour.string)
# Register (also special_register as defined above)
style.mmixal.13=fore:#7F007F
# Hexadecimal Number
style.mmixal.14=fore:#7F0000
# Operator
style.mmixal.15=bold
# Symbol (as defined in predef_symbols above)
style.mmixal.16=fore:#FF7777
# Include for those who use the preprocessor mmixali written by R. Loos.
# Comment otherwise.
#~ style.mmixal.17=$(colour.preproc)
style.mmixal.17=$(colour.code.comment.line),$(font.code.comment.line)

###############################################################################
# nncrontab styles (fixme)
###############################################################################

# whitespace (SCE_NNCRONTAB_DEFAULT)
style.nncrontab.0=
# Comment (SCE_NNCRONTAB_COMMENT)
style.nncrontab.1=fore:#007F00,$(font.comment)
# Task start/end (SCE_NNCRONTAB_TASK)
style.nncrontab.2=$(colour.string),back:#606060,fore:#FFFF00
# Section keywords (SCE_NNCRONTAB_SECTION)
style.nncrontab.3=fore:#00007F,bold
# Keywords (SCE_NNCRONTAB_KEYWORD)
style.nncrontab.4=fore:#000000,bold
# Modificators (SCE_NNCRONTAB_MODIFIER)
style.nncrontab.5=fore:#00007F,italics
# Asterisk (SCE_NNCRONTAB_ASTERISK)
style.nncrontab.6=fore:#000000,bold,back:#FFE0FF
# Number (SCE_NNCRONTAB_NUMBER)
style.nncrontab.7=fore:#007F7F
# Double quoted string (SCE_NNCRONTAB_STRING)
style.nncrontab.8=fore:#7F007F,$(font.monospace)
# Environment variable (SCE_NNCRONTAB_ENVIRONMENT)
style.nncrontab.9=back:#FFFFE0

###############################################################################
# nsis.properties (fixme)
###############################################################################

# Whitespace (SCE_NSIS_DEFAULT)
style.nsis.0=fore:#000000,$(font.base)
# Comment (SCE_NSIS_COMMENT)
style.nsis.1=fore:#007F00,$(font.comment)
# String double quote (SCE_NSIS_STRINGDQ)
style.nsis.2=fore:#999999,back:#EEEEEE
# String left quote (SCE_NSIS_STRINGLQ)
style.nsis.3=fore:#999999,back:#EEEEEE
# String right quote (SCE_NSIS_STRINGRQ)
style.nsis.4=fore:#999999,back:#EEEEEE
# Function (SCE_NSIS_FUNCTION)
style.nsis.5=fore:#00007F,bold
# fore:#0033CC,bold
# Variable (SCE_NSIS_VARIABLE)
style.nsis.6=fore:#CC3300
# Label (SCE_NSIS_LABEL)
style.nsis.7=fore:#FF9900
# User Defined (SCE_NSIS_USERDEFINED)
style.nsis.8=fore:#000000
# Section (SCE_NSIS_SECTIONDEF)
style.nsis.9=fore:#00007F,bold
# Sub section (SCE_NSIS_SUBSECTIONDEF)
style.nsis.10=fore:#00007F,bold
# If def (SCE_NSIS_IFDEFINEDEF)
style.nsis.11=fore:#00007F,bold
# Macro def (SCE_NSIS_MACRODEF)
style.nsis.12=fore:#00007F,bold
# Variable within string (SCE_NSIS_STRINGVAR)
style.nsis.13=fore:#CC3300,back:#EEEEEE
# Numbers (SCE_NSIS_NUMBER)
style.nsis.14=fore:#007F7F



###############################################################################
# Error liststyles (fixme)
###############################################################################

# Default
style.errorlist.0=
# python Error
style.errorlist.1=fore:#FF0000
# gcc Error
style.errorlist.2=fore:#800080
# Microsoft Error
style.errorlist.3=fore:#808000
# command or return status
style.errorlist.4=fore:#0000FF
# Borland error and warning messages
style.errorlist.5=fore:#B06000
# perl error and warning messages
style.errorlist.6=fore:#FF0000

###############################################################################
# Difference styles
###############################################################################

# Default
style.diff.0=
# Comment (part before "diff ..." or "--- ..." and , Only in ..., Binary file...)
style.diff.1=$(style.default.comment)
# Command (diff ...)
style.diff.2=$(style.default.keyword)
# Source file (--- ...) and Destination file (+++ ...)
style.diff.3=fore:#7F0000
# Position setting (@@ ...)
style.diff.4=fore:#7F007F
# Line removal (-...)
style.diff.5=fore:#007F7F
# Line addition (+...)
style.diff.6=fore:#00007F

###############################################################################
# Pascal style definition
###############################################################################

# White space
style.pascal.0=$(style.default.whitespace)
# Comment
style.pascal.1=$(style.default.comment)
# Line Comment
style.pascal.2=$(style.default.comment)
# Doc comment
style.pascal.3=$(style.default.comment)
# Number
style.pascal.4=$(style.default.number)

# Keyword
style.pascal.5=$(style.default.keyword)
# Double quoted string
style.pascal.6=$(style.default.doublequote)
# Single quoted string
style.pascal.7=$(style.default.singlequote)
# Symbols 
style.pascal.8=fore:#007F7F
# Preprocessor
style.pascal.9=$(style.default.preprocessor)
# Operators
style.pascal.10=$(style.default.operator)

###############################################################################
# Perl styles #
###############################################################################

# White space
style.perl.0=$(style.default.whitespace)
# Here document
style.perl.1=fore:#000040,back:#F0F0FF,eolfilled
# Comment
style.perl.2=$(style.default.comment)
# POD
style.perl.3=fore:#004000,back:#E0FFE0,eolfilled
# Number
style.perl.4=$(style.default.number)
# Keyword
style.perl.5=$(style.default.keyword)
# Double quoted string
style.perl.6=$(style.default.doublequote)
# Single quoted string
style.perl.7=$(style.default.singlequote)
# Symbols 
style.perl.8=fore:#007F7F
# Preprocessor
style.perl.9=$(style.default.preprocessor)
# Operators
style.perl.10=$(style.default.operator)
# Identifiers
style.perl.11=$(style.default.identifier)
# Scalars
style.perl.12=fore:#000000,back:#FFE0E0
# Array: @var
style.perl.13=fore:#000000,back:#FFFFE0
# Hash: %var
style.perl.14=fore:#000000,back:#FFE0FF
# Symbol table: *var
style.perl.15=fore:#000000,back:#E0E0E0
# Regex: /re/ or m{re}
style.perl.17=fore:#000000,back:#A0FFA0
# Substitution: s/re/ore/
style.perl.18=fore:#000000,back:#F0E080
# Long Quote (qq, qr, qw, qx) -- obsolete: replaced by qq, qx, qr, qw
style.perl.19=fore:#FFFF00,back:#8080A0
# Back Ticks
style.perl.20=fore:#FFFF00,back:#A08080
# Data Section
style.perl.21=fore:#600000,back:#FFF0D8,eolfilled
# Here-doc (delimiter)
style.perl.22=fore:#000000,back:#DDD0DD
# Here-doc (single quoted, q)
style.perl.23=fore:#7F007F,back:#DDD0DD,eolfilled,notbold
# Here-doc (double quoted, qq)
style.perl.24=fore:#7F007F,back:#DDD0DD,eolfilled,bold
# Here-doc (back ticks, qx)
style.perl.25=fore:#7F007F,back:#DDD0DD,eolfilled,italics
# Single quoted string, generic
style.perl.26=fore:#7F007F,$(font.monospace),notbold
# qq = Double quoted string
style.perl.27=$(style.perl.6)
# qx = Back ticks
style.perl.28=$(style.perl.20)
# qr = Regex
style.perl.29=$(style.perl.17)
# qw = Array
style.perl.30=$(style.perl.13)
# Braces are only matched in operator style
braces.perl.style=10

###############################################################################
# PHP styles (uses html lexer)
###############################################################################

# Default
style.hypertext.118=back:#FFF8F8,eolfilled
# Double quoted String
style.hypertext.119=$(style.default.doublequote),back:#FFF8F8
# Single quoted string
style.hypertext.120=$(style.default.singlequote),back:#FFF8F8
# Keyword
style.hypertext.121=$(style.default.keyword),back:#FFF8F8
# Number
style.hypertext.122=$(style.default.number),back:#FFF8F8
# Variable
style.hypertext.123=$(style.default.identifier),back:#FFF8F8
# Comment
style.hypertext.124=$(style.default.comment),back:#FFF8F8
# One line comment
style.hypertext.125=$(style.default.comment),back:#FFF8F8
# JavaScript EOL
style.hypertext.126=back:#FFF8F8,eolfilled
# PHP operator
style.hypertext.127=fore:#000000,back:#FFF8F8

###############################################################################
# POV styles
###############################################################################

# Default
style.pov.0=$(font.base)
# Comment
style.pov.1=$(colour.code.comment.box),$(font.code.comment.box)
# Line Comment
style.pov.2=$(colour.code.comment.line),$(font.code.comment.line)
# Doc comment
style.pov.3=$(colour.code.comment.doc),$(font.code.comment.doc)
# Number
style.pov.4=$(colour.number)
# Keyword
style.pov.5=fore:#800080
# Double quoted string
style.pov.6=fore:#FF0000,$(font.string.literal)
# Operators
style.pov.7=fore:#FF0000
#~ Identifiers
style.pov.8=
# Braces
style.pov.9=fore:#0000FF
# Keywords2
style.pov.10=fore:#B00040

###############################################################################
# Properties styles
###############################################################################

# Default
style.props.0=
# Comment
style.props.1=$(style.default.comment)
# Section
style.props.2=$(style.default.keyword)
# Assignment operator
style.props.3=fore:#0000FF
# Default value
style.props.4=$(style.default.number)
# Matched Operators
style.props.34=fore:#0000FF,notbold
style.props.35=fore:#FF0000,notbold

###############################################################################
# PostScript styles (fixme)
###############################################################################

#Default
style.ps.0=$(font.base)
# Comment
style.ps.1=$(colour.code.comment.line),$(font.code.comment.line)
# DSC comment
style.ps.2=$(colour.code.comment.doc),$(font.code.comment.doc)
# DSC comment value
style.ps.3=fore:#3060A0,$(font.code.comment.doc)
# Number
style.ps.4=$(colour.number)
# Name
style.ps.5=$(colour.operator)
# Keyword
style.ps.6=$(colour.keyword),bold
# Literal
style.ps.7=$(colour.preproc)
# Immediately evaluated literal
style.ps.8=$(colour.preproc),bold
# Array parenthesis
style.ps.9=$(colour.keyword)
# Dictionary parenthesis
style.ps.10=fore:#3060A0
# Procedure parenthesis
style.ps.11=$(colour.operator),bold
# Text
style.ps.12=$(colour.string),$(font.text)
# Hex string
style.ps.13=fore:#3F7F3F
# Base85 string
style.ps.14=$(colour.string)
# Bad string character
style.ps.15=$(colour.error)

###############################################################################
# Python styles
###############################################################################

# Whitespaces
style.python.0=$(style.default.whitespace)
# Comment
style.python.1=$(style.default.comment)
# Number
style.python.2=$(style.default.number)
# String
style.python.3=$(style.default.doublequote)
# Single quoted string
style.python.4=$(style.default.singlequote)
# Keyword
style.python.5=$(style.default.keyword)
# Triple quotes
style.python.6=$(style.default.doublequote)
# Triple double quotes
style.python.7=$(style.default.doublequote)
# Classname definition
style.python.8=$(style.default.definition)
# Function or method name definition
style.python.9=$(style.default.function)
# Operators
style.python.10=$(style.default.operator)
# Identifiers
style.python.11=$(style.default.identifier)
# Comment-blocks
style.python.12=$(style.default.comment)
# End of line where string is not closed
style.python.13=$(style.default.unclosedstring)
# Matched Operators
style.python.34=fore:#0000FF,$(style.default.operator)
style.python.35=fore:#FF0000,$(style.default.opetator)

###############################################################################
# ruby styles
###############################################################################

# White space
style.ruby.0=$(style.default.whitespace)
# Comment
style.ruby.1=$(style.default.comment)
# Number
style.ruby.2=$(style.default.number)
# String
style.ruby.3=$(style.default.singlequote)
# Single quoted string
style.ruby.4=$(style.default.doublequote)
# Keyword
style.ruby.5=$(style.default.keyword)
# Triple quotes
# style.ruby.6=fore:#7F0000
# Triple double quotes
style.ruby.7=$(style.default.doublequote)
# Class name definition
style.ruby.8=$(style.default.localkeyword)
# Function or method name definition
style.ruby.9=$(style.default.syskeyword)
# Operators
style.ruby.10=$(style.default.operator)
# Identifiers
style.ruby.11=$(style.default.identifier)
# Comment-blocks
style.ruby.12=$(style.default.comment)
# End of line where string is not closed
style.ruby.13=$(style.default.unclosedstring)
# Matched Operators
style.ruby.34=fore:#0000FF,bold
style.ruby.35=fore:#FF0000,bold

###############################################################################
# scriptol styles (fixme)
###############################################################################

# Default 
style.scriptol.0=fore:#000000
# White space
style.scriptol.1=fore:#808080
# Scriptol style comment line 
style.scriptol.2=fore:#007F00,$(font.comment)
# Persistent comment line 
style.scriptol.3=fore:#007F00,$(font.comment)
# C style comment line 
style.scriptol.4=fore:#007F00
# Comment-blocks
style.scriptol.5=fore:#007F00,$(font.comment)
# Number
style.scriptol.6=fore:#007F7F
# String
style.scriptol.7=fore:#7F007F,$(font.monospace)
# Character/Single quoted string
style.scriptol.8=fore:#7F007F,$(font.monospace)
# End of line where string is not closed
style.scriptol.9=fore:#FF0000,$(font.monospace),back:#E0C0E0,eolfilled
# Keyword
style.scriptol.10=fore:#00007F,bold
# Operators
style.scriptol.11=bold
# Identifiers
style.scriptol.12=fore:#333333
# Triple quotes
# style.scriptol.13=fore:#007F00
# Class name definition
style.scriptol.14=fore:#0000FF,bold
# Preprocessor
# style.scriptol.15=fore:#7F0000

###############################################################################
# Specman E styles (fixme)
###############################################################################

# Default
style.specman.32=$(font.base)
# White space
style.specman.0=fore:#808080
# Code
style.specman.1=$(font.base)
# Line Comment
style.specman.2=$(colour.code.comment.line),$(font.code.comment.line)
# Line Bang Comment
style.specman.3=fore:red
# Number
style.specman.4=$(colour.number)
# Keyword
style.specman.5=$(colour.keyword),bold
# Double quoted string
style.specman.6=$(colour.string)
# Keyword 2
style.specman.7=fore:#B00040
# Keyword 3
style.specman.8=fore:#804080,bold
# Preprocessor
style.specman.9=$(colour.preproc)
# Operators
style.specman.10=$(colour.operator),bold
# Identifiers
style.specman.11=
# End of line where string is not closed
style.specman.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# Regexp tag
style.specman.13=fore:#007F00,back:#E0FFE0
# HDL Signal
style.specman.14=fore:#00005F
# User defined
style.specman.15=back:#E0F0FF

###############################################################################
# SQL styles#
###############################################################################

# White space
style.sql.0=$(style.default.whitespace)
# Comment
style.sql.1=$(style.default.comment)
# Line Comment
style.sql.2=$(style.default.comment)
# Doc comment
style.sql.3=$(style.default.comment)
# Number
style.sql.4=$(style.default.number)
# Keyword
style.sql.5=$(style.default.keyword)
# Double quoted string
style.sql.6=$(style.default.doublequote)
# Single quoted string
style.sql.7=$(style.default.singlequote)
# Symbols 
style.sql.8=fore:#007F7F
# Preprocessor
style.sql.9=$(style.default.preprocessor)
# Operators
style.sql.10=$(style.default.operator)
# Identifiers
style.sql.11=$(style.default.identifier)
# End of line where string is not closed
style.sql.12=$(style.default.unclosedstring)

###############################################################################
# tcl styles
###############################################################################

# White space
style.tcl.0=$(style.default.whitespace)
# Comment
style.tcl.1=$(style.default.comment)
# Number
style.tcl.2=$(style.default.number)
# String
style.tcl.3=$(style.default.singlequote)
# Single quoted string
style.tcl.4=$(style.default.doublequote)
# Keyword
style.tcl.5=$(style.default.keyword)
# Triple quotes
style.tcl.6=$(style.default.singlequote)
# Triple double quotes
style.tcl.7=$(style.default.doublequote)
# Class name definition
style.tcl.8=$(style.default.localkeyword)
# Function or method name definition
style.tcl.9=$(style.default.syskeyword)
# Operators
style.tcl.10=$(style.default.operator)
# Identifiers
style.tcl.11=$(style.default.identifier)
# Comment-blocks
style.tcl.12=$(style.default.comment)
# End of line where string is not closed
style.tcl.13=$(style.default.unclosedstring)
# Matched Operators
style.tcl.34=fore:#0000FF,bold
style.tcl.35=fore:#FF0000,bold

###############################################################################
# TeX: highlighting (fixme)
###############################################################################

# Default
style.tex.0=fore:#7F7F00
style.tex.0=fore:#3F3F3F
# Special
style.tex.1=fore:#007F7F
# Group
style.tex.2=fore:#7F0000
# Symbol
style.tex.3=fore:#7F7F00
# Command
style.tex.4=fore:#007F00
# Text
# style.tex.5=fore:#000000

style.tex.34=fore:#00007F
style.tex.35=fore:#7F007F

###############################################################################
# VB styles #
###############################################################################

# White space
style.vb.0=$(style.default.whitespace)
# Comment
style.vb.1=$(style.default.comment)
# Line Comment
style.vb.2=$(style.default.comment)
# Doc comment
style.vb.3=$(style.default.comment)
# Number
style.vb.4=$(style.default.number)
# Keyword
style.vb.5=$(style.default.keyword)
# Double quoted string
style.vb.6=$(style.default.doublequote)
# Single quoted string
style.vb.7=$(style.default.singlequote)
# Symbols 
style.vb.8=fore:#007F7F
# Preprocessor
style.vb.9=$(style.default.preprocessor)

# VBScript styles same as VB styles
style.vbscript.0=$(style.vb.0)
style.vbscript.1=$(style.vb.1)
style.vbscript.2=$(style.vb.2)
style.vbscript.3=$(style.vb.3)
style.vbscript.4=$(style.vb.4)
style.vbscript.5=$(style.vb.5)
style.vbscript.6=$(style.vb.6)
style.vbscript.7=$(style.vb.7)
style.vbscript.8=$(style.vb.8)

###############################################################################
# eXtensible Markup Language
# For XML, there is no list of known tags or attributes so
# all are coloured known
###############################################################################

# Default
style.xml.0=fore:#000000,$(font.text)
# Tags
style.xml.1=fore:#000080
# Unknown Tags
style.xml.2=fore:#000080
# Attributes
style.xml.3=fore:#008080
# Unknown Attributes
style.xml.4=fore:#008080
# Numbers
style.xml.5=$(style.default.number),back:#FFF8F8
# Double quoted strings
style.xml.6=$(style.default.doublequote),back:#FFF8F8
# Single quoted strings
style.xml.7=$(style.default.singlequote),back:#FFF8F8
# Other inside tag
style.xml.8=fore:#800080
# Comment
style.xml.9=$(style.default.comment),back:#FFF8F8
# Entities
style.xml.10=fore:#800080,$(font.text)
# XML style tag ends '/>'
style.xml.11=fore:#000080
# XML identifier start '<?'
style.xml.12=fore:#800080,bold
# XML identifier end '?>'
style.xml.13=fore:#800080,bold
# CDATA
style.xml.17=fore:#800000,back:#FFF0F0,$(font.text),eolfilled
# Question
style.xml.18=fore:#800000
# Unquoted Value
style.xml.19=fore:#608060
# SGML tags <! ... >
style.xml.21=fore:#000080,back:#EFEFFF
# SGML command
style.xml.22=fore:#000080,back:#EFEFFF,bold
# SGML 1st param
style.xml.23=fore:#006600,back:#EFEFFF
# SGML double string
style.xml.24=$(style.default.doublequote),back:#FFF8F8
# SGML single string
style.xml.25=$(style.default.singlequote),back:#FFF8F8
# SGML error
style.xml.26=fore:#800000,back:#FF6666
# SGML special (#xxxx type)
style.xml.27=fore:#3366FF,back:#EFEFFF
# SGML entity
style.xml.28=fore:#333333,back:#EFEFFF
# SGML comment
style.xml.29=$(style.default.comment),back:#FFF8F8
# SGML block
style.xml.31=fore:#000066,back:#CCCCE0

###############################################################################
# Verilog styles (fixme)
###############################################################################

# Default
style.verilog.32=$(font.base)
# White space
style.verilog.0=fore:#808080
# Comment
style.verilog.1=$(colour.code.comment.box),$(font.code.comment.box)
# Line Comment
style.verilog.2=$(colour.code.comment.line),$(font.code.comment.line)
# Bang comment
style.verilog.3=fore:#3F7F3F,$(font.code.comment.line),back:#E0F0FF,eolfilled
# Number
style.verilog.4=$(colour.number)
# Keyword
style.verilog.5=$(colour.keyword),bold
# Double quoted string
style.verilog.6=$(colour.string),$(font.string.literal)
# Keyword2
style.verilog.7=fore:#007F7F
# System tasks
style.verilog.8=fore:#804020
# Preprocessor
style.verilog.9=$(colour.preproc)
# Operators
#style.verilog.10=$(colour.operator),bold
style.verilog.10=fore:#007070,bold
# Identifiers
style.verilog.11=
# End of line where string is not closed
style.verilog.12=fore:#000000,$(font.string.literal),back:#E0C0E0,eolfilled
# User defined identifiers and tasks
style.verilog.19=fore:#804020,$(font.code.comment.doc)

###############################################################################
# vhdl styles (fixme)
###############################################################################

# Default
style.vhdl.32=$(font.base)
# White space
style.vhdl.0=fore:#800080
# Comment
style.vhdl.1=$(colour.code.comment.line),$(font.code.comment.line)
# Bang comment
style.vhdl.2=fore:#3F7F3F,$(font.code.comment.line)
# Number
style.vhdl.3=$(colour.number)
# Double quoted string
style.vhdl.4=$(colour.string)
# Operators
#style.vhdl.5=$(colour.operator)
# Identifiers
style.vhdl.6=
# End of line where string is not closed
style.vhdl.7=fore:#000000,$(font.string.literal),back:#E0C0E0,eolfilled
# Keyword
style.vhdl.8=$(colour.keyword)
# Std operator
style.vhdl.9=fore:#007F7F
# Attribute
style.vhdl.10=fore:#804020
# Std Function
style.vhdl.11=fore:#808020
# Std Package
style.vhdl.12=fore:#208020
# Std Type
style.vhdl.13=fore:#208080
# User defined identifiers and tasks
style.vhdl.14=fore:#804020,$(font.code.comment.doc)

###############################################################################
# YAML font styles (fixme)
###############################################################################

# default
style.yaml.0=$(font.text),fore:#000000
# comment line
style.yaml.1=$(font.comment),fore:#008800
# value identifier
style.yaml.2=$(font.base),fore:#000088,bold
# keyword value
style.yaml.3=$(font.base),fore:#880088
# numerical value
style.yaml.4=$(font.base),fore:#880000
# reference/repeating value
style.yaml.5=$(font.base),fore:#008888
# document delimiting line
style.yaml.6=$(font.comment),fore:#FFFFFF,bold,back:#000088,eolfilled
# text block marker
style.yaml.7=$(font.text),fore:#333366
# syntax error marker
style.yaml.8=$(font.text),fore:#FFFFFF,italics,bold,back:#FF0000,eolfilled
