# Anjuta internal configuration file

#----------------- WARNING ------------------------------------#
# Any modification in this file without knowing proper internal
# working of Anjuta may lead to instabilites.
#----------------- WARNING ------------------------------------#

# Anjuta uses this file for internal operations,
# therefore this file should never be modified.
# Only Anjuta developers will be tampering with this file. 

# Any modification if needed should be approved by the Anjuta
# developers, so that the source code is also changed (if needed)
# and the changes incorporated in the next release of Anjuta.

##################################################
# Filters to be used in file open/close/save etc #
##################################################
filter.tcltk=Tcl/Tk (.tcl;.tk)|*.tcl;*.tk|

############################################
# File patterns defined for all file types #
############################################
file.patterns.tcltk=*.tcl;*.tk

####################################################
# Lexer to be used for corresponding file patterns #
####################################################
# Vlasta: Exactly don't know, what does it mean
lexer.$(file.patterns.tcltk)=perl

################################################
# File type corresponding to the file patterns #
################################################
filetype.$(file.patterns.tcltk)=tcl/tk

######################################################
# Default Commands for handling different file types #
######################################################

##
# Keywords for Tcl
##
keywords.$(file.patterns.tcltk)=Tcl after append array auto_execok auto_import \
auto_load auto_mkindex auto_mkindex_old auto_qualify auto_reset bgerror binary \
break catch cd clock close concat continue dde encoding eof error eval exec \
exit expr fblocked fconfigure fcopy file fileevent filename flush for foreach \
format gets glob global history http if incr info interp join lappend lindex \
linsert list llength load lrange lreplace lsearch lset lsort memory msgcat \
namespace open package parray pid pkg::create pkg_mkIndex proc puts pwd \
re_syntax read regexp registry regsub rename resource return scan seek set \
socket source split string subst switch tcl_endOfWord tcl_findLibrary \
tcl_startOfNextWord tcl_startOfPreviousWord tcl_wordBreakAfter \
tcl_wordBreakBefore tcltest tclvars tell time trace unknown unset update \
uplevel upvar variable vwait while \
\
bell bind bindtags bitmap button canvas checkbutton clipboard colors console \
cursors destroy entry event focus font frame grab grid image keysyms label \
labelframe listbox loadTk lower menu menubutton message option options pack \
panedwindow photo place radiobutton raise scale scrollbar selection send \
spinbox text tk tk_bisque tk_chooseColor tk_chooseDirectory tk_dialog \
tk_focusFollowsMouse tk_focusNext tk_focusPrev tk_getOpenFile tk_getSaveFile \
tk_menuSetFocus tk_messagesBox tk_optionMenu tk_popup tk_setPalette \
tk_textCopy tk_textCut tk_textPaste tkerror tkvars tkwait toplevel winfo wm

file.interpreted.$(file.patterns.tcltk)=1
file.is.source.$(file.patterns.tcltk)=1
file.has.folds.$(file.patterns.tcltk)=1

statement.indent.$(file.patterns.tcltk)=5 proc switch for foreach while if else elseif then
statement.end.$(file.patterns.tcltk)=10 ;
statement.lookback.$(file.patterns.tcltk)=20

block.start.$(file.patterns.tcltk)=10 {
block.end.$(file.patterns.tcltk)=10 }

######################################################
# Default Commands for handling different file types #
######################################################

command.compile.file.$(file.patterns.tcltk)=
command.build.file.$(file.patterns.tcltk)=
command.execute.file.$(file.patterns.tcltk)=tclsh "$(current.full.filename.ext)"
