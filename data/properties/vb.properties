# Anjuta internal configuration file

#----------------- WARNING ------------------------------------#
# Any modification in this file without knowing proper internal
# working of Anjuta may lead to instabilites.
#----------------- WARNING ------------------------------------#

# Anjuta uses this file for internal operations,
# therefore this file should never be modified.
# Only Anjuta developers will be tampering with this file. 

# Any modification if needed should be approved by the Anjuta
# developers, so that the source code is also changed (if needed)
# and the changes incorporated in the next release of Anjuta.

##################################################
# Filters to be used in file open/close/save etc #
##################################################
filter.vb=VB (.vb;.vbp;.vbs;.bas;.frm;.ctl;.cls;.pag;.dob;.dsr)|*.vb;*.vbp;*.vbs;*.bas;*.frm;*.ctl;*.pag;*.dob;*.dsr|

############################################
# File patterns defined for all file types #
############################################
file.patterns.vb=*.vbs;*.frm;*.ctl;*.cls
file.patterns.wscript=*.vbs;*.dsm

####################################################
# Lexer to be used for corresponding file patterns #
####################################################
lexer.$(file.patterns.vb)=vb
lexer.$(file.patterns.wscript)=vbscript

################################################
# File type corresponding to the file patterns #
################################################
filetype.$(file.patterns.vb)=vb
filetype.$(file.patterns.wscript)=vbscript

###################
# Keywords for VB #
###################
keywordclass.vb=and begin case call continue do each else elseif end erase \
error event exit false for function get gosub goto if implement in load loop lset \
me mid new next not nothing on or property raiseevent rem resume return rset \
select set stop sub then to true unload until wend while with withevents \
attribute alias as boolean byref byte byval const compare currency date declare dim double \
enum explicit friend global integer let lib long module object option optional \
preserve private property public redim single static string type variant

keywordclass.vbnet=addhandler addressof andalso alias and ansi as assembly auto boolean \
byref byte byval call case catch cbool cbyte cchar cdate cdec cdbl char cint class \
clng cobj const cshort csng cstr ctype date decimal declare default delegate dim do double \
each else elseif end enum erase error event exit false finally for friend function get \
gettype goto  handles if implements imports in inherits integer interface is let lib like long \
loop me mod module mustinherit mustoverride mybase myclass namespace new \
next not nothing notinheritable notoverridable object on option optional or \
orelse overloads overridable overrides paramarray preserve private property protected public \
raiseevent readonly redim rem removehandler resume return select set shadows \
shared short single static step stop string structure sub synclock then throw to true try \
typeof unicode until variant when while with withevents writeonly xor

keywords.$(file.patterns.vb)=$(keywordclass.vbnet)
keywords.$(file.patterns.wscript)=$(keywordclass.vb)

# Not used here, mostly system statements (files, registry, I/O...),
# I am not sure I should include them in the regular statements.
keywordclass.vbotherstatements=appactivate beep chdir chdrive close \
deletesetting filecopy get input kill line lock unlock lset mid mkdir name \
open print put randomize reset rmdir rset savepicture savesetting seek \
sendkeys setattr time unload width write

comment.block.vb='~
#############
# VB styles #
#############

# White space
style.vb.0=$(style.default.whitespace)
# Comment
style.vb.1=$(style.default.comment)
# Line Comment
style.vb.2=$(style.default.comment)
# Doc comment
style.vb.3=$(style.default.comment)
# Number
style.vb.4=$(style.default.number)
# Keyword
style.vb.5=$(style.default.keyword)
# Double quoted string
style.vb.6=$(style.default.doublequote)
# Single quoted string
style.vb.7=$(style.default.singlequote)
# Symbols 
style.vb.8=fore:#007F7F
# Preprocessor
style.vb.9=$(style.default.preprocessor)

# VBScript styles same as VB styles
style.vbscript.0=$(style.vb.0)
style.vbscript.1=$(style.vb.1)
style.vbscript.2=$(style.vb.2)
style.vbscript.3=$(style.vb.3)
style.vbscript.4=$(style.vb.4)
style.vbscript.5=$(style.vb.5)
style.vbscript.6=$(style.vb.6)
style.vbscript.7=$(style.vb.7)
style.vbscript.8=$(style.vb.8)
