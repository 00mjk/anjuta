<project-wizard>
	<name>Anjuta Plugin</name>
	<description>Anjuta plugin</description>
	<icon>anjuta-plugin-logo.png</icon>
	<category>C</category>
</project-wizard>

<page name="basic" _label="Basic information" _description="General Project Infromation">
	<property type="string" name="Name" _label="Project Name:" _description="Project name must not contain spaces, because it will be the name of the project build target (executable, library etc.)" default="anjuta-plugin-foobar" summary="yes" mandatory="yes"/>
	<property type="string" name="Author" _label="Author:" _description="" default="[+UserName+]" mandatory="yes"/>
	<property type="string" name="Email" _label="Email address:" _description="" default="[+EmailAddress+]" mandatory="no"/>
	<property type="string" name="Version" _label="Version:" default="0.1" mandatory="yes"/>
	<property type="directory" name="Destination" _label="Destination:" _description="" default="[+AnjutaProjectDirectory+]" mandatory="yes"/>
</page>

<page name="options" _label="Project options" _description="Options for project build system">
	<property type="hidden" name="NameUpper" default="[+(string-upcase (get "Name"))+]"/>
	<property type="hidden" name="NameLower" default="[+(string-downcase (get "Name"))+]"/>
	<property type="hidden" name="NameCUpper" default="[+(string->c-name! (string-upcase (get "Name")))+]"/>
	<property type="hidden" name="NameCLower" default="[+(string->c-name! (string-downcase (get "Name")))+]"/>
	<property type="string" name="PluginTitle" _label="Plugin Title:" _description="Display title of the plugin" default="Anjuta Foobar Sample Plugin" summary="yes" mandatory="yes"/>
	<property type="string" name="PluginDescription" _label="Plugin Description:" _description="Display description of the plugin" default="A sample demonstration plugin for Anjuta" summary="yes" mandatory="yes"/>
	<property type="string" name="PluginClass" _label="Plugin Class Name:" _description="Plugin class name" default="AnjutaFoobarPlugin" summary="yes" mandatory="yes"/>
	<property type="string" name="PluginDependencies" _label="Plugin Dependencies:" _description="Comma separated, other plugins that this plugin depends on. It could be either primary interface name or plugin location (library:class)" default="" summary="yes"/>
	<property type="file" name="IconFile" _label="Icon File:" _description="Icon file for the plugin" summary="yes" mandatory="yes"/>
	<property type="boolean" name="HasGladeFile" _label="Create glade interface file" _description="Create a template glade interface file" default="1"/>
	<property type="boolean" name="HasUI" _label="Plugin has menus or/and toolbars" _description="Whether the plugin has menus or toolbars" default="1"/>
	<property type="hidden" name="HaveI18n" default="1"/>
	<property type="hidden" name="HaveSharedlib" default="1"/>
	<property type="boolean" name="HavePackage" _label="Configure external packages:" _description="Use pkg-config to add library supports from other packages" default="0"/>
</page>

<page name="packages" _label="Configure external packages" _description="Configure external packages">
	<property type="boolean" name="IncludeGNUHeader" _label="Include GNU Header:" _description="Include GPL header in source files as comments" default="1"/>
	<property type="boolean" name="HaveLangCPP" _label="Add C++ support:" _description="Adds c++ support to the project so that c++ source files can be built" default="0"/>
[+IF (=(get "HavePackage") "1")+]
	<property type="string" name="PackageModule1" _label="Require Package:" _description="Give a package name that your project require. You may also mention what is the required version of the package. For example, 'libgnomeui-2.0' or 'libgnomeui-2.0 &gt;= 2.2.0'" mandatory="yes"/>
	<property type="string" name="PackageModule2" _label="Require Package:" _description="Give a package name that your project require. You may also mention what is the required version of the package. For example, 'libgnomeui-2.0' or 'libgnomeui-2.0 &gt;= 2.2.0'"/>
	<property type="string" name="PackageModule3" _label="Require Package:" _description="Give a package name that your project require. You may also mention what is the required version of the package. For example, 'libgnomeui-2.0' or 'libgnomeui-2.0 &gt;= 2.2.0'"/>
	<property type="string" name="PackageModule4" _label="Require Package:" _description="Give a package name that your project require. You may also mention what is the required version of the package. For example, 'libgnomeui-2.0' or 'libgnomeui-2.0 &gt;= 2.2.0'"/>
	<property type="string" name="PackageModule5" _label="Require Package:" _description="Give a package name that your project require. You may also mention what is the required version of the package. For example, 'libgnomeui-2.0' or 'libgnomeui-2.0 &gt;= 2.2.0'"/>
[+ENDIF+]
</page>

<page name="watches" _label="Values to watch" _description="Shell values to watch">
	<property type="string" name="value1" _label="Value Name:" _description="Name of the value to watch" default="" summary="yes"/>
	<property type="string" name="value2" _label="Value Name:" _description="Name of the value to watch" default="" summary="yes"/>
	<property type="string" name="value3" _label="Value Name:" _description="Name of the value to watch" default="" summary="yes"/>
</page>

<page name="compoments" _label="Implement plugin interfaces" _description="Plugin interfaces to implement">
	<property type="string" name="interface1" _label="Interface:" _description="Interface implemented by the plugin"/>
	<property type="string" name="interface2" _label="Interface:" _description="Interface implemented by the plugin"/>
	<property type="string" name="interface3" _label="Interface:" _description="Interface implemented by the plugin"/>
</page>

<content>
	<directory source="." destination="[+Destination+]">
		<directory source="terminal" destination="[+NameLower+]">
			<file source="AUTHORS"/>
			<file source="ChangeLog"/>
			<file source="Makefile.am.tpl" destination="Makefile.am"/>
			<file source="NEWS"/>
			<file source="README"/>
			<file source="autogen.sh" executable="yes"/>
			<file destination="[+NameLower+].anjuta" source="project.anjuta"/>
			[+IF (=(get "HaveI18n") "1")+]
			<directory source="po">
				<file source="ChangeLog"/>
			</directory>
			[+ENDIF+]
		</directory>
		<directory source="anjuta-plugin" destination="[+NameLower+]">
			<file source="configure.in.tpl" destination="configure.in"/>
			<directory source="src">
				<file source="Makefile.am.tpl" destination="Makefile.am"/>
				<file source="plugin.c"/>
				<file source="plugin.h"/>
				<file source="[+IconFile+]" destination="[+NameLower+].png"/>
				<file source="plugin.plugin.in" destination="[+NameLower+].plugin.in"/>
				[+IF (=(get "HasUI") "1")+]
					<file source="plugin.ui" destination="[+NameLower+].ui"/>
				[+ENDIF+]
				[+IF (=(get "HasGladeFile") "1")+]
					<file source="plugin.glade" destination="[+NameLower+].glade"/>
				[+ENDIF+]
			</directory>
			[+IF (=(get "HaveI18n") "1")+]
			<directory source="po">
				<file source="POTFILES.in"/>
			</directory>
			[+ENDIF+]
		</directory>
	</directory>
</content>

<action>
	<run command="sh -c 'cd [+Destination+]/[+NameLower+] &amp;&amp; ./autogen.sh'"/>
	<open file="[+Destination+]/[+NameLower+]/[+NameLower+].anjuta"/>
</action>
