/*
 * This file was generated by orbit-idl - DO NOT EDIT!
 */

#include <glib.h>
#define ORBIT_IDL_SERIAL 9
#include <orb/orbit.h>

#ifndef Prj_H
#define Prj_H 1
#ifdef __cplusplus
extern "C"
{
#endif				/* __cplusplus */

/** typedefs **/
#if !defined(ORBIT_DECL_ProjectManager_PrjMan) && !defined(_ProjectManager_PrjMan_defined)
#define ORBIT_DECL_ProjectManager_PrjMan 1
#define _ProjectManager_PrjMan_defined 1
#define ProjectManager_PrjMan__free CORBA_Object__free
   typedef CORBA_Object ProjectManager_PrjMan;
   extern CORBA_unsigned_long ProjectManager_PrjMan__classid;
#if !defined(TC_IMPL_TC_ProjectManager_PrjMan_0)
#define TC_IMPL_TC_ProjectManager_PrjMan_0 'P'
#define TC_IMPL_TC_ProjectManager_PrjMan_1 'r'
#define TC_IMPL_TC_ProjectManager_PrjMan_2 'j'
   extern const struct CORBA_TypeCode_struct TC_ProjectManager_PrjMan_struct;
#define TC_ProjectManager_PrjMan ((CORBA_TypeCode)&TC_ProjectManager_PrjMan_struct)
#endif
#endif

/** POA structures **/
   typedef struct
   {
      void *_private;
      CORBA_char *(*_get_srcLanguage) (PortableServer_Servant _servant,
				       CORBA_Environment * ev);
      CORBA_char *(*_get_projectName) (PortableServer_Servant _servant,
				       CORBA_Environment * ev);
       CORBA_boolean(*AddFileToProject) (PortableServer_Servant _servant,
					 const CORBA_char * szCategory,
					 const CORBA_char * szFileName,
					 CORBA_Environment * ev);
       CORBA_boolean(*RemFileFromProject) (PortableServer_Servant _servant,
					   const CORBA_char * szCategory,
					   const CORBA_char * szFileName,
					   CORBA_Environment * ev);
       CORBA_boolean(*SetClassInfo) (PortableServer_Servant _servant,
				     const CORBA_char * szClass,
				     const CORBA_char * szFileDecl,
				     const CORBA_char * szFileImpl,
				     CORBA_Environment * ev);
      void (*SetGladeRef) (PortableServer_Servant _servant,
			   const CORBA_Object pgf, CORBA_Environment * ev);
      void (*SaveFileIfModified) (PortableServer_Servant _servant,
				  const CORBA_char * szFullPath,
				  CORBA_Environment * ev);
      void (*ReloadFile) (PortableServer_Servant _servant,
			  const CORBA_char * szFullPath,
			  CORBA_Environment * ev);
   }
   POA_ProjectManager_PrjMan__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_ProjectManager_PrjMan__epv *ProjectManager_PrjMan_epv;
   }
   POA_ProjectManager_PrjMan__vepv;
   typedef struct
   {
      void *_private;
      POA_ProjectManager_PrjMan__vepv *vepv;
   }
   POA_ProjectManager_PrjMan;
   extern void POA_ProjectManager_PrjMan__init(PortableServer_Servant servant,
					       CORBA_Environment * ev);
   extern void POA_ProjectManager_PrjMan__fini(PortableServer_Servant servant,
					       CORBA_Environment * ev);

/** prototypes **/
   CORBA_char *ProjectManager_PrjMan__get_srcLanguage(ProjectManager_PrjMan
						      _obj,
						      CORBA_Environment * ev);
   CORBA_char *ProjectManager_PrjMan__get_projectName(ProjectManager_PrjMan
						      _obj,
						      CORBA_Environment * ev);
   CORBA_boolean ProjectManager_PrjMan_AddFileToProject(ProjectManager_PrjMan
							_obj,
							const CORBA_char *
							szCategory,
							const CORBA_char *
							szFileName,
							CORBA_Environment *
							ev);
   CORBA_boolean
      ProjectManager_PrjMan_RemFileFromProject(ProjectManager_PrjMan _obj,
					       const CORBA_char * szCategory,
					       const CORBA_char * szFileName,
					       CORBA_Environment * ev);
   CORBA_boolean ProjectManager_PrjMan_SetClassInfo(ProjectManager_PrjMan
						    _obj,
						    const CORBA_char *
						    szClass,
						    const CORBA_char *
						    szFileDecl,
						    const CORBA_char *
						    szFileImpl,
						    CORBA_Environment * ev);
   void ProjectManager_PrjMan_SetGladeRef(ProjectManager_PrjMan _obj,
					  const CORBA_Object pgf,
					  CORBA_Environment * ev);
   void ProjectManager_PrjMan_SaveFileIfModified(ProjectManager_PrjMan _obj,
						 const CORBA_char *
						 szFullPath,
						 CORBA_Environment * ev);
   void ProjectManager_PrjMan_ReloadFile(ProjectManager_PrjMan _obj,
					 const CORBA_char * szFullPath,
					 CORBA_Environment * ev);

   void
      _ORBIT_skel_ProjectManager_PrjMan__get_srcLanguage
      (POA_ProjectManager_PrjMan * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       CORBA_char *
       (*_impl__get_srcLanguage) (PortableServer_Servant _servant,
				  CORBA_Environment * ev));
   void
      _ORBIT_skel_ProjectManager_PrjMan__get_projectName
      (POA_ProjectManager_PrjMan * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       CORBA_char *
       (*_impl__get_projectName) (PortableServer_Servant _servant,
				  CORBA_Environment * ev));
   void
      _ORBIT_skel_ProjectManager_PrjMan_AddFileToProject
      (POA_ProjectManager_PrjMan * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       CORBA_boolean(*_impl_AddFileToProject) (PortableServer_Servant
					       _servant,
					       const CORBA_char * szCategory,
					       const CORBA_char * szFileName,
					       CORBA_Environment * ev));
   void
      _ORBIT_skel_ProjectManager_PrjMan_RemFileFromProject
      (POA_ProjectManager_PrjMan * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       CORBA_boolean(*_impl_RemFileFromProject) (PortableServer_Servant
						 _servant,
						 const CORBA_char *
						 szCategory,
						 const CORBA_char *
						 szFileName,
						 CORBA_Environment * ev));
   void
      _ORBIT_skel_ProjectManager_PrjMan_SetClassInfo(POA_ProjectManager_PrjMan
						     * _ORBIT_servant,
						     GIOPRecvBuffer *
						     _ORBIT_recv_buffer,
						     CORBA_Environment * ev,
						     CORBA_boolean
						     (*_impl_SetClassInfo)
						     (PortableServer_Servant
						      _servant,
						      const CORBA_char *
						      szClass,
						      const CORBA_char *
						      szFileDecl,
						      const CORBA_char *
						      szFileImpl,
						      CORBA_Environment *
						      ev));
   void
      _ORBIT_skel_ProjectManager_PrjMan_SetGladeRef(POA_ProjectManager_PrjMan
						    * _ORBIT_servant,
						    GIOPRecvBuffer *
						    _ORBIT_recv_buffer,
						    CORBA_Environment * ev,
						    void (*_impl_SetGladeRef)
						    (PortableServer_Servant
						     _servant,
						     const CORBA_Object pgf,
						     CORBA_Environment * ev));
   void
      _ORBIT_skel_ProjectManager_PrjMan_SaveFileIfModified
      (POA_ProjectManager_PrjMan * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl_SaveFileIfModified) (PortableServer_Servant _servant,
					 const CORBA_char * szFullPath,
					 CORBA_Environment * ev));
   void _ORBIT_skel_ProjectManager_PrjMan_ReloadFile(POA_ProjectManager_PrjMan
						     * _ORBIT_servant,
						     GIOPRecvBuffer *
						     _ORBIT_recv_buffer,
						     CORBA_Environment * ev,
						     void (*_impl_ReloadFile)
						     (PortableServer_Servant
						      _servant,
						      const CORBA_char *
						      szFullPath,
						      CORBA_Environment *
						      ev));
#ifdef __cplusplus
}
#endif				/* __cplusplus */

#endif
#undef ORBIT_IDL_SERIAL
