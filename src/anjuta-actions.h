/* -*- Mode: C; indent-tabs-mode: t; c-basic-offset: 4; tab-width: 4 -*- */
/* FIXME: Move this out */
/* These actions will be segregated later into their respective plugins */
#include "anjuta-stock.h"

static EggActionGroupEntry menu_entries_file[] = {
  { "ActionMenuFile", N_("_File"), NULL, NULL, NULL, NULL, NULL },
  { "ActionFileNew", N_("_New"), GTK_STOCK_NEW, "<control>n",
	N_("New file"),
    G_CALLBACK (on_new_file1_activate), NULL },
  { "ActionFileOpen", N_("_Open ..."), GTK_STOCK_OPEN, "<control>o",
	N_("Open file"),
    G_CALLBACK (on_open1_activate), NULL },
  { "ActionFileSave", N_("_Save"), GTK_STOCK_SAVE, "<control>s",
	N_("Save current file"),
    G_CALLBACK (on_save1_activate), NULL },
  { "ActionFileSaveAs", N_("Save _As ..."), GTK_STOCK_SAVE_AS, NULL,
	N_("Save the current file with a different name"),
    G_CALLBACK (on_save_as1_activate), NULL },
  { "ActionFileSaveAll", N_("Save A_ll"),  GTK_STOCK_SAVE, NULL,
	N_("Save all currently open files, except new files"),
    G_CALLBACK (on_save_all1_activate), NULL },
  { "ActionFileClose", N_("_Close File"), GTK_STOCK_CLOSE, "<control>w",
	N_("Close current file"),
    G_CALLBACK (on_close_file1_activate), NULL },
  { "ActionFileCloseAll", N_("Close All Files"), GTK_STOCK_CLOSE, "<alt>d",
	N_("Close all files"),
    G_CALLBACK (on_close_all_file1_activate), NULL },
  { "ActionFileReload", N_("Reload F_ile"), GTK_STOCK_REVERT_TO_SAVED, NULL,
	N_("Reload current file"),
    G_CALLBACK (on_reload_file1_activate), NULL },
  { "ActionMenuFileRecentFiles", N_("Recent _Files"),  NULL, NULL, NULL, NULL, NULL },
  { "ActionMenuFileRecentProjects", N_("Recent Projec_ts"),  NULL, NULL, NULL, NULL, NULL },
  { "ActionExit", N_("_Quit"), GTK_STOCK_QUIT, "<control>q",
	N_("Quit Anjuta IDE"),
    G_CALLBACK (on_exit1_activate), NULL },
};

static EggActionGroupEntry menu_entries_print[] = {
  { "ActionPrintSetup", N_("Print Set_up ..."), NULL, NULL,
	N_("Setup for printing"),
    G_CALLBACK (on_page_setup1_activate), NULL },
  { "ActionPrintFile", N_("_Print"), GTK_STOCK_PRINT, "<alt>p",
	N_("Print the current file"),
    G_CALLBACK (anjuta_print_cb), NULL },
  { "ActionPrintPreview", N_("_Print Preview"), NULL, NULL,
	N_("Print preview of the current file"),
    G_CALLBACK (anjuta_print_preview_cb), NULL },
};

static EggActionGroupEntry menu_entries_transform[] = {
  { "ActionMenuEditTransform", N_("_Transform"), NULL, NULL, NULL, NULL, NULL },
  { "ActionEditMakeSelectionUppercase", N_("_Make Selection Uppercase"), NULL, NULL,
	N_("Make the selected text uppercase"),
    G_CALLBACK (on_editor_command_activate),  (gpointer) ANE_UPRCASE },
  { "ActionEditMakeSelectionLowercase", N_("Make Selection Lowercase"), NULL, NULL,
	N_("Make the selected text lowercase"),
    G_CALLBACK (on_editor_command_activate),  (gpointer) ANE_LWRCASE },
  { "ActionEditConvertCRLF", N_("Convert EOL chars to CRLF"), NULL, NULL,
	N_("Convert End Of Line characters to DOS EOL (CRLF)"),
    G_CALLBACK (on_editor_command_activate),  (gpointer) ANE_EOL_CRLF },
  { "ActionEditConvertLF", N_("Convert EOL chars to LF"), NULL, NULL,
	N_("Convert End Of Line characters to Unix EOL (LF)"),
    G_CALLBACK (on_editor_command_activate),  (gpointer) ANE_EOL_LF },
  { "ActionEditConvertCR", N_("Convert EOL chars to CR"), NULL, NULL,
	N_("Convert End Of Line characters to Mac OS EOL (CR)"),
    G_CALLBACK (on_editor_command_activate),  (gpointer) ANE_EOL_CR },
  { "ActionEditConvertEOL", N_("Convert EOL chars to majority EOL"), NULL, NULL,
	N_("Convert End Of Line characters to majority of the EOL found in the file"),
    G_CALLBACK (on_transform_eolchars1_activate), NULL },
};

static EggActionGroupEntry menu_entries_select[] = {
  { "ActionMenuEditSelect", N_("_Select"), NULL, NULL, NULL, NULL, NULL },
  { "ActionEditSelectAll", N_("Select _All"), NULL, "<control>a",
	N_("Select all text in the editor"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_SELECTALL },
  { "ActionEditSelectToBrace", N_("Select to _Brace"), NULL, "<alt>a",
	N_("Select the text in the matching braces"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_SELECTTOBRACE },
  { "ActionEditSelectBlock", N_("Select _Code Block"),
	ANJUTA_STOCK_BLOCK_SELECT, "<alt>b",
	N_("Select the current code block"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_SELECTBLOCK },
};

static EggActionGroupEntry menu_entries_insert[] = {
  { "ActionMenuEditInsert", N_("_Insert text"), NULL, NULL, NULL, NULL, NULL },
  { "ActionMenuEditInsertCtemplate", N_("C _template"), NULL, NULL, NULL, NULL, NULL },
  { "ActionMenuEditInsertCvs", N_("_CVS keyword"), NULL, NULL, NULL, NULL, NULL },
  { "ActionMenuEditInsertGeneral", N_("_General"), NULL, NULL, NULL, NULL, NULL },
  { "ActionEditInsertHeader", N_("_Header"), NULL, NULL,
	N_("Insert a file header"),
    G_CALLBACK (on_insert_header), NULL },
  { "ActionEditInsertCGPL", N_("/_* GPL Notice */"), NULL, NULL,
	N_("Insert GPL notice with C style comments"),
    G_CALLBACK (on_insert_c_gpl_notice), NULL },
  { "ActionEditInsertCPPGPL", N_("/_/ GPL Notice"), NULL, NULL,
	N_("Insert GPL notice with C++ style comments"),
    G_CALLBACK (on_insert_cpp_gpl_notice), NULL },
  { "ActionEditInsertPYGPL", N_("_# GPL Notice"), NULL, NULL,
	N_("Insert GPL notice with Python style comments"),
    G_CALLBACK (on_insert_py_gpl_notice), NULL },
  { "ActionEditInsertUsername", N_("Current _Username"), NULL, NULL,
	N_("Insert name of current user"),
    G_CALLBACK (on_insert_username), NULL },
  { "ActionEditInsertDateTime", N_("Current _Date & Time"), NULL, NULL,
	N_("Insert current date & time"),
    G_CALLBACK (on_insert_date_time), NULL },
  { "ActionEditInsertHeaderTemplate", N_("Header File _Template"), NULL, NULL,
	N_("Insert a standard header file template"),
    G_CALLBACK (on_insert_header_template), NULL },
  { "ActionEditInsertChangelog", N_("ChangeLog entry"), NULL, NULL,
	N_("Insert a ChangeLog entry"),
    G_CALLBACK (on_insert_changelog_entry), NULL },
  { "ActionEditInsertStatementSwitch", N_("_switch"), NULL, NULL,
	N_("Insert a switch template"),
    G_CALLBACK (on_insert_switch_template), NULL },
  { "ActionEditInsertStatementFor", N_("_for"), NULL, NULL,
	N_("Insert a for template"),
    G_CALLBACK (on_insert_for_template), NULL },
  { "ActionEditInsertStatementWhile", N_("_while"), NULL, NULL,
	N_("Insert a while template"),
    G_CALLBACK (on_insert_while_template), NULL },
  { "ActionEditInsertStatementIfElse", N_("_if...else"), NULL, NULL,
	N_("Insert an if...else template"),
    G_CALLBACK (on_insert_ifelse_template), NULL },
  { "ActionEditInsertCVSAuthor", N_("_Author"), NULL, NULL,
	N_("Insert the CVS Author keyword (author of the change)"),
    G_CALLBACK (on_insert_cvs_author), NULL },
  { "ActionEditInsertCVSDate", N_("_Date"), NULL, NULL,
	N_("Insert the CVS Date keyword (date and time of the change)"),
    G_CALLBACK (on_insert_cvs_date), NULL },
  { "ActionEditInsertCVSHeader", N_("_Header"), NULL, NULL,
	N_("Insert the CVS Header keyword (full path revision, date, author, state)"),
    G_CALLBACK (on_insert_cvs_header), NULL },
  { "ActionEditInsertCVSID", N_("_Id"), NULL, NULL,
	N_("Insert the CVS Id keyword (file revision, date, author)"),
    G_CALLBACK (on_insert_cvs_id), NULL },
  { "ActionEditInsertCVSLog", N_("_Log"), NULL, NULL,
	N_("Insert the CVS Log keyword (log message)"),
    G_CALLBACK (on_insert_cvs_log), NULL },
  { "ActionEditInsertCVSName", N_("_Name"), NULL, NULL,
	N_("Insert the CVS Name keyword (name of the sticky tag)"),
    G_CALLBACK (on_insert_cvs_name), NULL },
  { "ActionEditInsertCVSRevision", N_("_Revision"), NULL, NULL,
	N_("Insert the CVS Revision keyword (revision number)"),
    G_CALLBACK (on_insert_cvs_revision), NULL },
  { "ActionEditInsertCVSSource", N_("_Source"), NULL, NULL,
	N_("Insert the CVS Source keyword (full path)"),
    G_CALLBACK (on_insert_cvs_source), NULL },
};

static EggActionGroupEntry menu_entries_search[] = {
  { "ActionMenuEditSearch", N_("_Search"), NULL, NULL, NULL, NULL, NULL },
  { "ActionEditSearchFind", N_("_Find ..."), GTK_STOCK_FIND, "<control>f",
	N_("Search for a string or regular expression in the editor"),
    G_CALLBACK (on_find1_activate), NULL },
  { "ActionEditSearchFindNext", N_("Find _Next"), GTK_STOCK_FIND, "<shift>f6",
	N_("Repeat the last Find command"),
    G_CALLBACK (on_findnext1_activate), NULL },
  { "ActionEditSearchReplace", N_("Find and R_eplace ..."),
	GTK_STOCK_FIND_AND_REPLACE, "<shift><control>f",
	N_("Search for and replace a string or regular expression with another string"),
    G_CALLBACK (on_find_and_replace1_activate), NULL },
  { "ActionEditSearchInFiles", N_("Fin_d in Files ..."), NULL, NULL,
	N_("Search for a string in multiple files or directories"),
    G_CALLBACK (on_find_in_files1_activate), NULL },
  { "ActionEditSearchSelectionISearch", N_("_Enter Selection/I-Search"),
	NULL, "<control>e",
	N_("Enter the selected text as the search target"),
    G_CALLBACK (on_enterselection), NULL },
};

static EggActionGroupEntry menu_entries_comment[] = {
  { "ActionMenuEditComment", N_("Co_mment code"), NULL, NULL, NULL, NULL, NULL },
  { "ActionEditCommentBlock", N_("_Block Comment/Uncomment"), NULL, NULL,
	N_("Block comment the selected text"),
    G_CALLBACK (on_comment_block), NULL },
  { "ActionEditCommentBox", N_("Bo_x Comment/Uncomment"), NULL, NULL,
	N_("Box comment the selected text"),
    G_CALLBACK (on_comment_box), NULL },
  { "ActionEditCommentStream", N_("_Stream Comment/Uncomment"), NULL, NULL,
	N_("Stream comment the selected text"),
    G_CALLBACK (on_comment_block), NULL },
};

static EggActionGroupEntry menu_entries_navigation[] = {
  { "ActionMenuEditGoto", N_("G_oto"), NULL, NULL, NULL, NULL, NULL },
  { "ActionEditGotoLineActivate", N_("_Goto Line number"),
	GTK_STOCK_JUMP_TO, NULL,
	N_("Go to a particular line in the editor"),
    G_CALLBACK (on_toolbar_goto_activate), NULL },
  { "ActionEditGotoLine", N_("_Line number ..."),
	GTK_STOCK_JUMP_TO, "<control><alt>g",
	N_("Go to a particular line in the editor"),
    G_CALLBACK (on_goto_line_no1_activate), NULL },
  { "ActionEditGotoMatchingBrace", N_("Matching _Brace"),
	GTK_STOCK_JUMP_TO, "<control><alt>m", 
	N_("Go to the matching brace in the editor"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_MATCHBRACE },
  { "ActionEditGotoBlockStart", N_("_Start of block"),
	ANJUTA_STOCK_BLOCK_START, "<control><alt>s",
	N_("Go to the start of the current block"),
    G_CALLBACK (on_goto_block_start1_activate), NULL },
  { "ActionEditGotoBlockEnd", N_("_End of block"),
	ANJUTA_STOCK_BLOCK_END, "<control><alt>e",
	N_("Go to the end of the current block"),
    G_CALLBACK (on_goto_block_end1_activate), NULL },
  { "ActionEditGotoMessagePrev", N_("_Previous message"),
	ANJUTA_STOCK_PREV_MESSAGE, "<control><alt>p",
	N_("Go to previous message"),
    G_CALLBACK (on_goto_prev_mesg1_activate), NULL },
  { "ActionEditGotoMessageNext", N_("_Next message"),
	ANJUTA_STOCK_NEXT_MESSAGE, "<control><alt>n",
	N_("Go to next message"),
    G_CALLBACK (on_goto_next_mesg1_activate), NULL },
  { "ActionEditGotoHistoryBack", N_("_Back"),
	GTK_STOCK_JUMP_TO, "<control><alt>b",
	N_("Go back"),
    G_CALLBACK (on_go_back_activate), NULL },
  { "ActionEditGotoHistoryForward", N_("_Forward"),
	GTK_STOCK_JUMP_TO, "<control><alt>f",
	N_("Go forward"),
    G_CALLBACK (on_go_forward_activate), NULL },
  { "ActionEditGotoTagDefinition", N_("_Tag definition"),
	GTK_STOCK_JUMP_TO, "<control>d",
	N_("Goto tag definition"),
    G_CALLBACK (on_goto_tag_activate), (gpointer) TRUE },
  { "ActionEditGotoTagDeclaration", N_("Tag _declaration"),
	GTK_STOCK_JUMP_TO, "<shift><control>d", N_("Goto tag declaration"),
    G_CALLBACK (on_goto_tag_activate), (gpointer) FALSE },
  { "ActionEditGotoOccuranceNext", N_("Ne_xt occurrence"),
	GTK_STOCK_JUMP_TO, NULL,
	N_("Find the next occurrence of current word"),
    G_CALLBACK (on_next_occur), NULL },
  { "ActionEditGotoOccurancePrev", N_("Pre_vious occurrence"),
	GTK_STOCK_JUMP_TO, NULL,
	N_("Find the previous occurrence of current word"),
    G_CALLBACK (on_prev_occur), NULL },
};

static EggActionGroupEntry menu_entries_edit[] = {
  { "ActionMenuEdit", N_("_Edit"), NULL, NULL, NULL, NULL, NULL },
  { "ActionEditUndo", N_("U_ndo"), GTK_STOCK_UNDO, "<control>z",
	N_("Undo the last action"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_UNDO },
  { "ActionEditRedo", N_("_Redo"), GTK_STOCK_REDO, "<control>r",
	N_("Redo the last undone action"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_REDO },
  { "ActionEditCut", N_("C_ut"), GTK_STOCK_CUT, "<control>x",
	N_("Cut the selected text from the editor to the clipboard"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_CUT },
  { "ActionEditCopy", N_("_Copy"), GTK_STOCK_COPY, "<control>c",
	N_("Copy the selected text to the clipboard"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_COPY },
  { "ActionEditPaste", N_("_Paste"), GTK_STOCK_PASTE, "<control>v",
	N_("Paste the content of clipboard at the current position"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_PASTE },
  { "ActionEditClear", N_("_Clear"), NULL, "Delete",
	N_("Delete the selected text from the editor"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_CLEAR },
  { "ActionEditAutocomplete", N_("_AutoComplete"),
	ANJUTA_STOCK_AUTOCOMPLETE, "<control>enter",
	N_("AutoComplete the current word"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_COMPLETEWORD },
  { "ActionEditCalltip", N_("S_how calltip"), NULL, NULL,
	N_("Show calltip for the function"),
    G_CALLBACK (on_calltip1_activate), NULL },
  { "ActionEditAdvancedSearch", N_("Advanced Search And Replace"),
	GTK_STOCK_FIND, NULL,
	N_("New advance search And replace stuff"),
    G_CALLBACK (anjuta_search_replace_activate), NULL },
};

static EggActionGroupEntry menu_entries_view[] = {
  { "ActionMenuView", N_("_View"), NULL, NULL, NULL, NULL, NULL },
  { "ActionMenuViewToolbars", N_("_Toolbars"), NULL, NULL, NULL, NULL, NULL },
  { "ActionMenuViewEditor", N_("_Editor"), NULL, NULL, NULL, NULL, NULL },
  
  { "ActionViewToolbarMain", N_("_Main Toolbar"), NULL, NULL, NULL,
    G_CALLBACK (on_anjuta_toolbar_activate), ANJUTA_MAIN_TOOLBAR, TOGGLE_ACTION },
  { "ActionViewToolbarExtended", N_("_Extended Toolbar"), NULL, NULL, NULL,
    G_CALLBACK (on_anjuta_toolbar_activate), ANJUTA_EXTENDED_TOOLBAR, TOGGLE_ACTION },
  { "ActionViewToolbarDebug", N_("_Debug Toolbar"), NULL, NULL, NULL,
    G_CALLBACK (on_anjuta_toolbar_activate), ANJUTA_DEBUG_TOOLBAR, TOGGLE_ACTION },
  { "ActionViewToolbarBrowser", N_("_Browser Toolbar"), NULL, NULL, NULL,
    G_CALLBACK (on_anjuta_toolbar_activate), ANJUTA_BROWSER_TOOLBAR, TOGGLE_ACTION },
  { "ActionViewToolbarFormat", N_("_Format Toolbar"), NULL, NULL, NULL,
    G_CALLBACK (on_anjuta_toolbar_activate), ANJUTA_FORMAT_TOOLBAR, TOGGLE_ACTION },
  
  { "ActionViewEditorLinenumbers", N_("_Line numbers margin"), NULL, NULL,
	N_("Show/Hide line numbers"),
    G_CALLBACK (on_editor_linenos1_activate), NULL, TOGGLE_ACTION},
  { "ActionViewEditorMarkers", N_("_Markers Margin"), NULL, NULL,
	N_("Show/Hide markers margin"),
    G_CALLBACK (on_editor_markers1_activate), NULL, TOGGLE_ACTION},
  { "ActionViewEditorFolds", N_("_Code fold margin"), NULL, NULL,
	N_("Show/Hide code fold margin"),
    G_CALLBACK (on_editor_codefold1_activate), NULL, TOGGLE_ACTION},
  { "ActionViewEditorGuides", N_("_Indentation guides"), NULL, NULL,
	N_("Show/Hide indentation guides"),
    G_CALLBACK (on_editor_indentguides1_activate), NULL, TOGGLE_ACTION},
  { "ActionViewEditorSpaces", N_("_White spaces"), NULL, NULL,
	N_("Show/Hide white spaces"),
    G_CALLBACK (on_editor_whitespaces1_activate), NULL, TOGGLE_ACTION},
  { "ActionViewEditorEOL", N_("_Line end characters"), NULL, NULL,
	N_("Show/Hide line end characters"),
    G_CALLBACK (on_editor_eolchars1_activate), NULL, TOGGLE_ACTION},
  { "ActionViewEditorWrapping", N_("Line _wrapping"), NULL, NULL,
	N_("Enable/disable line wrapping"),
    G_CALLBACK (on_editor_linewrap1_activate), NULL, TOGGLE_ACTION},
  { "ActionViewEditorZoomIn", N_("Zoom in"), NULL, NULL,
	N_("Zoom in: Increase font size"),
    G_CALLBACK (on_zoom_text_activate), (gpointer) "++"},
  { "ActionViewEditorZoomOut", N_("Zoom out"), NULL, NULL,
	N_("Zoom out: Decrease font size"),
    G_CALLBACK (on_zoom_text_activate), (gpointer) "--"},
  { "ActionViewWindowMessageManager", N_("Messages Window"),
	ANJUTA_STOCK_MESSAGES, "<control>F1",
	N_("Show/Hide the Message window"),
    G_CALLBACK (on_messages1_activate), NULL},
  { "ActionViewWindowProjectManager", N_("Project Window"),
	ANJUTA_STOCK_PROJECT, "<control>F2",
	N_("Show/Hide the Project window"),
    G_CALLBACK (on_project_listing1_activate), NULL},
  { "ActionViewWindowBookmarks", N_("B_ookmarks"), NULL, "<control>F3",
	N_("Show the Bookmark window"),
    G_CALLBACK (on_bookmarks1_activate), NULL},
  { "ActionViewWindowBreakpoints", N_("_Breakpoints"), NULL, "<control>F4",
	N_("Show breakpoints editor window"),
    G_CALLBACK (on_breakpoints1_activate), NULL},
  { "ActionViewWindowRegisters", N_("_Registers"), NULL, "<control>F6",
	N_("Show CPU registers and their contents"),
    G_CALLBACK (on_registers1_activate), NULL},
  { "ActionViewWindowSharedLibs", N_("Shared _Libraries"), NULL, "<control>F8",
	N_("Show shared libraries loaded by the program"),
    G_CALLBACK (on_shared_lib1_activate), NULL},
  { "ActionViewWindowKernelSignals", N_("_Kernel Signals"), NULL, "<control>F9",
	N_("Show the kernel signals editor window"),
    G_CALLBACK (on_kernal_signals1_activate), NULL},
  { "ActionViewWindowMemoryDump", N_("_Dump Window"), NULL, "<control>F10",
	N_("Show memory dump window"),
    G_CALLBACK (on_dump_window1_activate), NULL},
  { "ActionViewWindowTerminal", N_("_Console"), NULL, "<control>F11",
	N_("Show the terminal"),
    G_CALLBACK (on_console1_activate), NULL},
  { "ActionViewWindowLocalVariables", N_("Show _Locals"), NULL, NULL,
	N_("Show/Hide Local variables in Message window"),
    G_CALLBACK (on_showhide_locals), NULL},
};

static EggActionGroupEntry menu_entries_project[] = {
  { "ActionMenuProject", N_("_Project"), NULL, NULL, NULL, NULL, NULL },
  { "ActionMenuProjectAddFile", N_("_Add file"), NULL, NULL, NULL, NULL, NULL },
  { "ActionProjectNew", N_("N_ew Project ..."), GTK_STOCK_NEW, NULL,
	N_("Create a Project using the Application Wizard"),
    G_CALLBACK (on_new_project1_activate), NULL },
  { "ActionProjectImport", N_("_Import Project ..."), GTK_STOCK_CONVERT, NULL,
	N_("Import an existing code project using the Project Import Wizard"),
    G_CALLBACK (on_import_project_activate), NULL },
  { "ActionProjectOpen", N_("Open P_roject ..."), ANJUTA_STOCK_OPEN_PROJECT, "<control>j",
	N_("Open a Project"),
    G_CALLBACK (on_open_project1_activate), NULL },
  { "ActionProjectSave", N_("Sa_ve Project"), ANJUTA_STOCK_SAVE_PROJECT, NULL,
	N_("Save the current Project"),
    G_CALLBACK (on_save_project1_activate), NULL },
  { "ActionProjectClose", N_("Close Pro_ject"), ANJUTA_STOCK_CLOSE_PROJECT, NULL,
	N_("Close the current Project"),
    G_CALLBACK (on_close_project1_activate), NULL },
  { "ActionProjectAddFileHearder", N_("_Include file"), NULL, NULL, NULL,
    G_CALLBACK (on_project_add_file1_activate),
	GINT_TO_POINTER(MODULE_INCLUDE + 1)},
  { "ActionProjectAddFileSource", N_("_Source file"), NULL, NULL, NULL,
    G_CALLBACK (on_project_add_file1_activate),
	GINT_TO_POINTER(MODULE_SOURCE + 1)},
  { "ActionProjectAddFileHelp", N_("_Help file"), NULL, NULL, NULL,
    G_CALLBACK (on_project_add_file1_activate),
	GINT_TO_POINTER(MODULE_HELP + 1)},
  { "ActionProjectAddFileData", N_("_Data file"), NULL, NULL, NULL,
    G_CALLBACK (on_project_add_file1_activate),
	GINT_TO_POINTER(MODULE_DATA + 1)},
  { "ActionProjectAddFilePixmap", N_("_Pixmap file"), NULL, NULL, NULL,
    G_CALLBACK (on_project_add_file1_activate),
	GINT_TO_POINTER(MODULE_PIXMAP + 1)},
  { "ActionProjectAddFileTranslation", N_("_Translation file"), NULL, NULL, NULL,
    G_CALLBACK (on_project_add_file1_activate),
	GINT_TO_POINTER(MODULE_PO + 1)},
  { "ActionProjectAddFileDoc", N_("D_oc file"), NULL, NULL, NULL,
    G_CALLBACK (on_project_add_file1_activate),
	GINT_TO_POINTER(MODULE_DOC + 1)},
  { "ActionProjectOpenInDefaultViewer", N_("Open in default _viewer"),
	GTK_STOCK_OPEN, NULL, NULL,
    G_CALLBACK (on_project_view1_activate), NULL},
  { "ActionProjectOpenInAnjuta", N_("_Open in Anjuta"),
	GTK_STOCK_OPEN, NULL, NULL,
    G_CALLBACK (on_project_edit1_activate), NULL},
  { "ActionProjectRemoveFile", N_("_Remove File"), GTK_STOCK_CLOSE, NULL, NULL,
    G_CALLBACK (on_project_remove1_activate), NULL},
  { "ActionProjectConfigure", N_("_Configure Project"),
	GTK_STOCK_PREFERENCES, NULL,
	N_("Configure options for the current Project"),
    G_CALLBACK (on_project_configure1_activate), NULL},
  { "ActionProjectInfo", N_("Project _Info"), GTK_STOCK_PROPERTIES, NULL,
	N_("Display the Project information"),
    G_CALLBACK (on_project_project_info1_activate), NULL},
  { "ActionProjectDock", N_("_Docked"), NULL, NULL,
	N_("Dock/Undock the Project Window"),
    G_CALLBACK (on_project_dock_undock1_activate), NULL, TOGGLE_ACTION},
  { "ActionProjectSymbolsUpdate", N_("_Update tags image"), NULL, NULL,
	N_("Update the tags image of the Project/opened files"),
    G_CALLBACK (on_update_tagmanager_activate), (gpointer) FALSE},
  { "ActionProjectSymbolsRebuild", N_("_Rebuild tags image"), NULL, NULL,
	N_("Rebuild the tags image of the Project"),
    G_CALLBACK (on_update_tagmanager_activate), (gpointer) TRUE},
  { "ActionProjectEditGUI", N_("Ed_it Application GUI ..."), NULL, "<alt>g",
	N_("Edit application GUI with the Glade GUI editor"),
    G_CALLBACK (on_edit_app_gui1_activate), NULL},
};

static EggActionGroupEntry menu_entries_style[] = {
  { "ActionMenuFormatStyle", N_("Force _Highlight Style"), NULL, NULL, NULL, NULL, NULL },
  { "ActionFormatHighlightStyleAutomatic",
	N_("Automatic"), GTK_STOCK_EXECUTE, NULL,
	N_("Automatically determine the highlight style"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_AUTOMATIC)},
  { "ActionFormatHighlightStyleNone",N_("No Highlight style"), NULL, NULL,
	N_("Remove the current highlight style"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_NONE)},
  { "ActionFormatHighlightStyleCpp",N_("C and C++"), NULL, NULL,
	N_("Force the highlight style to C and C++"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_CPP)},
  { "ActionFormatHighlightStyleHtml", N_("HTML"), NULL, NULL,
	N_("Force the highlight style to HTML"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_HTML)},
  { "ActionFormatHighlightStyleXml", N_("XML"), NULL, NULL,
	N_("Force the highlight style to XML"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_XML)},
  { "ActionFormatHighlightStyleJs", N_("Javascript"), NULL, NULL,
	N_("Force the highlight style to Javascript"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_JS)},
  { "ActionFormatHighlightStyleWScript", N_("WScript"), NULL, NULL,
	N_("Force the highlight style to WScript"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_WSCRIPT)},
  { "ActionFormatHighlightStyleMakefile", N_("Makefile"), NULL, NULL,
	N_("Force the highlight style to Makefile"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_MAKE)},
  { "ActionFormatHighlightStyleJava", N_("Java"), NULL, NULL,
	N_("Force the highlight type to Java"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_JAVA)},
  { "ActionFormatHighlightStyleLua", N_("LUA"), NULL, NULL,
	N_("Force the highlight style to LUA"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_LUA)},
  { "ActionFormatHighlightStylePython", N_("Python"), NULL, NULL,
	N_("Force the highlight style to Python"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_PYTHON)},
  { "ActionFormatHighlightStylePerl", N_("Perl"), NULL, NULL,
	N_("Force the highlight style to Perl"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_PERL)},
  { "ActionFormatHighlightStyleSQL", N_("SQL"), NULL, NULL,
	N_("Force the highlight style to SQL"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_SQL)},
  { "ActionFormatHighlightStylePLSQL", N_("PL/SQL"), NULL, NULL,
	N_("Force the highlight style to PL/SQL"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_PLSQL)},
  { "ActionFormatHighlightStylePHP", N_("PHP"), NULL, NULL,
	N_("Force the highlight style to PHP"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_PHP)},
  { "ActionFormatHighlightStyleLatex", N_("LaTex"), NULL, NULL,
	N_("Force the highlight style to LaTex"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_LATEX)},
  { "ActionFormatHighlightStyleDiff", N_("Diff"), NULL, NULL,
	N_("Force the highlight style to Diff"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_DIFF)},
  { "ActionFormatHighlightStylePascal", N_("Pascal"), NULL, NULL,
	N_("Force the highlight style to Pascal"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_PASCAL)},
  { "ActionFormatHighlightStyleXcode", N_("Xcode"), NULL, NULL,
	N_("Force the highlight style to Xcode"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_XCODE)},
  { "ActionFormatHighlightStyleProps", N_("Prj/Properties"), NULL, NULL,
	N_("Force the highlight style to project/properties files"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_PROPS)},
  { "ActionFormatHighlightStyleConf", N_("Conf"), NULL, NULL,
	N_("Force the highlight style to UNIX conf files"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_CONF)},
  { "ActionFormatHighlightStyleAda", N_("Ada"), NULL, NULL,
	N_("Force the highlight style to Ada"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_ADA)},
  { "ActionFormatHighlightStyleBaan", N_("Baan"), NULL, NULL,
	N_("Force the highlight style to Baan"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_BAAN)},
  { "ActionFormatHighlightStyleLisp", N_("Lisp"), NULL, NULL,
	N_("Force the highlight style to Lisp"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_LISP)},
  { "ActionFormatHighlightStyleRuby", N_("Ruby"), NULL, NULL,
	N_("Force the highlight style to Ruby"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_RUBY)},
  { "ActionFormatHighlightStyleMatlab", N_("Matlab"), NULL, NULL,
	N_("Force the highlight style to Matlab"),
    G_CALLBACK (on_force_hilite1_activate), GUINT_TO_POINTER (TE_LEXER_MATLAB)},
};

static EggActionGroupEntry menu_entries_format[] = {
  { "ActionMenuFormat", N_("For_mat"), NULL, NULL, NULL, NULL, NULL },
  { "ActionFormatAutoformat", N_("Auto _Format"),
	ANJUTA_STOCK_INDENT_AUTO, NULL,
	N_("Autoformat the current source file"),
    G_CALLBACK (on_indent1_activate), NULL},
  { "ActionFormatSettings", N_("Autoformat _settings"),
	ANJUTA_STOCK_AUTOFORMAT_SETTINGS, NULL,
	N_("Autoformat settings"),
    G_CALLBACK (on_format_indent_style_clicked), NULL},
  { "ActionFormatIndentationIncrease", N_("_Increase Indent"),
	ANJUTA_STOCK_INDENT_INC, NULL,
	N_("Increase indentation of line/selection"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_INDENT_INCREASE},
  { "ActionFormatIndentationDecrease", N_("_Decrease Indent"),
	ANJUTA_STOCK_INDENT_DCR, NULL,
	N_("Decrease indentation of line/selection"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_INDENT_DECREASE},
  { "ActionFormatFoldCloseAll", N_("_Close All Folds"),
	ANJUTA_STOCK_FOLD_CLOSE, NULL,
	N_("Close all code folds in the editor"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_CLOSE_FOLDALL},
  { "ActionFormatFoldOpenAll", N_("_Open All Folds"),
	ANJUTA_STOCK_FOLD_OPEN, NULL,
	N_("Open all code folds in the editor"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_OPEN_FOLDALL},
  { "ActionFormatFoldToggle", N_("_Toggle Current Fold"),
	ANJUTA_STOCK_FOLD_TOGGLE, NULL,
	N_("Toggle current code fold in the editor"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_TOGGLE_FOLD},
  { "ActionFormatEditorDetach", N_("D_etach Current Document"),
	ANJUTA_STOCK_UNDOCK, NULL,
	N_("Detach the current document into a separate editor window"),
    G_CALLBACK (on_detach1_activate), NULL},
};

static EggActionGroupEntry menu_entries_build[] = {
  { "ActionMenuBuild", N_("_Build"), NULL, NULL, NULL, NULL, NULL },
  { "ActionBuildCompile", N_("_Compile"),
	ANJUTA_STOCK_COMPILE, "F9",
	N_("Compile the current source file"),
    G_CALLBACK (on_compile1_activate), NULL},
  { "ActionBuildCompileWithMake", N_("Compile With _Make"),
	ANJUTA_STOCK_COMPILE, "<shift>F9",
	N_("Compile the current source file using Make"),
    G_CALLBACK (on_make1_activate), NULL},
  { "ActionBuildBuild", N_("_Build"),
	ANJUTA_STOCK_BUILD, "F11",
	N_("Build the source directory of the Project or the current source file"),
    G_CALLBACK (on_build_project1_activate), NULL},
  { "ActionBuildBuildAll", N_("Build _All"),
	ANJUTA_STOCK_BUILD_ALL, "<shift>F11",
	N_("Build the whole Project"),
    G_CALLBACK (on_build_all_project1_activate), NULL},
  { "ActionBuildSave", N_("Save Build Messages"),
	NULL, NULL,
	N_("Save build messages to a file"),
    G_CALLBACK (on_save_build_messages_activate), NULL},
  { "ActionBuildInstall", N_("_Install"),
	NULL, NULL,
	N_("Install the Project on your system"),
    G_CALLBACK (on_install_project1_activate), NULL},
  { "ActionBuildDistribution", N_("Build _Distribution"),
	NULL, NULL,
	N_("Build the distribution tarball of the Project"),
    G_CALLBACK (on_build_dist_project1_activate), NULL},
  { "ActionBuildConfigure", N_("Con_figure ..."),
	ANJUTA_STOCK_CONFIGURE, NULL,
	N_("Configure the Project"),
    G_CALLBACK (on_configure_project1_activate), NULL},
  { "ActionBuildAutogen", N_("Auto _generate ..."),
	NULL, NULL,
	N_("Auto generate all the build files for the Project"),
    G_CALLBACK (on_autogen_project1_activate), NULL},
  { "ActionBuildClean", N_("Clea_n"),
	NULL, NULL,
	N_("Clean the source directory"),
    G_CALLBACK (on_clean_project1_activate), NULL},
  { "ActionBuildCleanAll", N_("Clean A_ll"),
	NULL, NULL,
	N_("Clean the whole Project directory"),
    G_CALLBACK (on_clean_all_project1_activate), NULL},
  { "ActionBuildStop", N_("_Stop Build"),
	GTK_STOCK_STOP, NULL,
	N_("Stop the current compile or build process"),
    G_CALLBACK (on_stop_build_make1_activate), NULL},
  { "ActionBuildExecute", N_("_Execute"),
	GTK_STOCK_EXECUTE, NULL,
	N_("Execute the program"),
    G_CALLBACK (on_go_execute1_activate), NULL},
  { "ActionBuildSetExecute", N_("Set _Program params ..."),
	GTK_STOCK_EXECUTE, NULL,
	N_("Set the execution parameters of the program"),
    G_CALLBACK (on_go_execute2_activate), NULL},
};

static EggActionGroupEntry menu_entries_bookmark[] = {
  { "ActionMenuBookmark", N_("Bookmar_k"), NULL, NULL, NULL, NULL, NULL },
  { "ActionBookmarkToggle", N_("_Toggle bookmark"),
	ANJUTA_STOCK_TOGGLE_BOOKMARK, "<control>k",
	N_("Toggle a bookmark at the current line position"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_BOOKMARK_TOGGLE},
  { "ActionBookmarkFirst", N_("_First bookmark"),
	GTK_STOCK_GOTO_FIRST, NULL,
	N_("Jump to the first bookmark in the file"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_BOOKMARK_FIRST},
  { "ActionBookmarkPrevious", N_("_Previous bookmark"),
	GTK_STOCK_GO_BACK, NULL,
	N_("Jump to the previous bookmark in the file"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_BOOKMARK_PREV},
  { "ActionBookmarkNext", N_("_Next bookmark"),
	GTK_STOCK_GO_FORWARD, NULL,
	N_("Jump to the next bookmark in the file"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_BOOKMARK_NEXT},
  { "ActionBookmarkLast", N_("_Last bookmark"),
	GTK_STOCK_GOTO_LAST, NULL,
	N_("Jump to the last bookmark in the file"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_BOOKMARK_LAST},
  { "ActionBookmarkClear", N_("_Clear all bookmarks"),
	GTK_STOCK_CLOSE, NULL,
	N_("Clear bookmarks"),
    G_CALLBACK (on_editor_command_activate), (gpointer) ANE_BOOKMARK_CLEAR},
};

static EggActionGroupEntry menu_entries_settings[] = {
  { "ActionMenuSettings", N_("_Settings"), NULL, NULL, NULL, NULL, NULL },
  { "ActionSettingsBuild", N_("_Build Settings ..."),
	GTK_STOCK_PREFERENCES, NULL,
	N_("Settings for the compiler and linker"),
    G_CALLBACK (on_set_compiler1_activate), NULL},
  { "ActionSettingsPaths", N_("_Source Paths ..."),
	GTK_STOCK_PREFERENCES, NULL,
	N_("Specify the source paths for Anjuta to search"),
    G_CALLBACK (on_set_src_paths1_activate), NULL},
  { "ActionSettingsComamnds", N_("Co_mmands ..."),
	GTK_STOCK_PREFERENCES, NULL,
	N_("Specify the various commands for use"),
    G_CALLBACK (on_set_commands1_activate), NULL},
  { "ActionSettingsPreferences", N_("_Preferences ..."),
	GTK_STOCK_PROPERTIES, NULL,
	N_("Do you prefer coffee to tea? Check it out."),
    G_CALLBACK (on_set_preferences1_activate), NULL},
  { "ActionSettingseEditorColors", N_("_Editor colors and fonts ..."),
	GTK_STOCK_PROPERTIES, NULL,
	N_("Syntax highlighting settings"),
    G_CALLBACK (on_set_style_editor_activate), NULL},
  { "ActionSettingsFileFilters", N_("File view filters ..."),
	GTK_STOCK_PROPERTIES, NULL,
	N_("Edit file view filters"),
    G_CALLBACK (on_file_view_filters_activate), NULL},
  { "ActionSettingsUserProperties", N_("_Edit user.properties file ..."),
	GTK_STOCK_PROPERTIES, NULL,
	N_("Edit user properties file"),
    G_CALLBACK (on_edit_user_properties1_activate), NULL},
  { "ActionSettingsDefaults", N_("Set _Default Preferences"),
	GTK_STOCK_PROPERTIES, NULL,
	N_("But I prefer tea."),
    G_CALLBACK (on_set_default_preferences1_activate), NULL},
  { "ActionSettingsShortcuts", N_("C_ustomize shortcuts"),
	NULL, NULL,
	N_("Customize shortcuts associated with menu items"),
    G_CALLBACK (on_customize_shortcuts_activate), NULL},
  { "ActionSettingsTools", N_("_Tools Editor"),
	NULL, NULL,
	N_("Customize user-defined tools"),
    G_CALLBACK (on_tool_editor_activate), NULL},
  { "ActionSettingsStartwith", N_("St_art-with dialog"),
	NULL, NULL,
	N_("Show start-with dialog"),
    G_CALLBACK (on_start_with_dialog_activate), NULL},
  { "ActionSettingsSetup", N_("An_juta setup wizard"),
	NULL, NULL,
	N_("Setup wizard for first time run"),
    G_CALLBACK (on_setup_wizard_activate), NULL},
};

static EggActionGroupEntry menu_entries_help[] = {
  { "ActionMenuHelp", N_("_Help"), NULL, NULL, NULL, NULL, NULL },
  { "ActionHelpGnome", N_("The GNOME API pages"),
	GTK_STOCK_DIALOG_INFO, NULL,
	N_("Browse GNOME _API Pages"),
    G_CALLBACK (on_gnome_pages1_activate), NULL},
  { "ActionHelpMan", N_("Browse _Man Pages"),
	GTK_STOCK_DIALOG_INFO, NULL,
	N_("The good old manual pages"),
    G_CALLBACK (on_url_activate), "man:man"},
  { "ActionHelpInfo", N_("Browse _Info Pages"),
	GTK_STOCK_DIALOG_INFO, NULL,
	N_("The good info pages"),
    G_CALLBACK (on_url_activate), "info:info"},
  { "ActionHelpContext", N_("_Context Help"),
	GTK_STOCK_HELP, "<control>h",
	N_("Search help for the current word in the editor"),
    G_CALLBACK (on_context_help_activate), NULL},
  { "ActionHelpSearch", N_("_Search a topic"), GTK_STOCK_FIND, NULL,
	N_("May I help you?"),
    G_CALLBACK (on_search_a_topic1_activate), NULL},
  { "ActionHelpAnjutaHome", N_("Anjuta _Home Page"), GTK_STOCK_HOME, NULL,
	N_("Online documentation and resources"),
    G_CALLBACK (on_url_activate), "http://anjuta.org"},
  { "ActionHelpLidn", N_("_Libraries API references"), GTK_STOCK_JUMP_TO, NULL,
	N_("Online reference library for GDK, GLib, GNOME etc.."),
    G_CALLBACK (on_url_activate), "http://lidn.sourceforge.net"},
  { "ActionHelpBugReport", N_("Report _Bugs"), GTK_STOCK_JUMP_TO, NULL,
	N_("Submit a bug report for Anjuta"),
    G_CALLBACK (on_url_activate), "http://sourceforge.net/tracker/?atid=114222&group_id=14222&func=browse"},
  { "ActionHelpFeatureRequest", N_("Request _Features"),
	GTK_STOCK_JUMP_TO, NULL,
	N_("Submit a feature request for Anjuta"),
    G_CALLBACK (on_url_activate), "http://sourceforge.net/tracker/?atid=364222&group_id=14222&func=browse"},
  { "ActionHelpSubmitPatch", N_("Submit _patches"),
	GTK_STOCK_JUMP_TO, NULL,
	N_("Submit patches for Anjuta"),
    G_CALLBACK (on_url_activate), "http://sourceforge.net/tracker/?atid=314222&group_id=14222&func=browse"},
  { "ActionHelpFaq", N_("Ask a _question"),
	GTK_STOCK_JUMP_TO, NULL,
	N_("Submit a question for FAQs"),
    G_CALLBACK (on_url_activate), "mailto:anjuta-list@lists.sourceforge.net"},
  { "ActionAboutAnjuta", N_("_About"),
	GNOME_STOCK_ABOUT, NULL,
	N_("About Anjuta"),
    G_CALLBACK (on_about1_activate), NULL},
};
